<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Design | Peter Boni]]></title>
  <link href="http://www.peterboni.net/blog/categories/design/atom.xml" rel="self"/>
  <link href="http://www.peterboni.net/"/>
  <updated>2014-02-22T16:09:18+08:00</updated>
  <id>http://www.peterboni.net/</id>
  <author>
    <name><![CDATA[Peter Boni]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PhotoArchive for iPhone]]></title>
    <link href="http://www.peterboni.net/blog/2014/02/15/photoarchive/"/>
    <updated>2014-02-15T07:00:00+08:00</updated>
    <id>http://www.peterboni.net/blog/2014/02/15/photoarchive</id>
    <content type="html"><![CDATA[<blockquote><p>Update: PhotoArchive now has a permanent home.
For the latest information &amp; download link visit <a href="/photoarchive">PhotoArchive for iPhone</a>.</p></blockquote>

<p>I take a lot of photos &amp; videos with my iPhone.
It&rsquo;s always with me, so it&rsquo;s convenient, and the quality is good.
My DSLR body &amp; lenses produce superior quality, but are usually left at home gathering dust.</p>

<p>When I take new photos or videos, often of my family, I worry that if something were to happen to my iPhone, those irreplaceable memories will be lost forever.</p>

<p>There are many solutions for this need, for example iCloud Backup, the Dropbox app, or the Amazon Cloud Drive app, but they all have varying costs &amp; limitations.
I wanted a simple solution for me, and that&rsquo;s why I decided to build an app as a side project &ndash; PhotoArchive for iPhone.
When released, PhotoArchive will be free for everyone on the App Store.</p>

<!--more-->


<h2>What it looks like</h2>

<div align="center">
<img src="http://www.peterboni.net/media/images/2014-02-15-photoarchive/black.png" style="border:none !important;">
<img src="http://www.peterboni.net/media/images/2014-02-15-photoarchive/white.png" style="border:none !important;">
</div>


<p></p>


<h2>What it does</h2>

<p>I have a Western Digital My Book NAS (Network Attached Storage) at home that is always on.
I use it for file storage for computers on the network, and DLNA streaming to the living room TV via the PS3.</p>

<p>I copy new photos &amp; videos from my &amp; my wife&rsquo;s iPhones by manually connecting them to a computer via USB, and downloading the new ones.
Because it&rsquo;s a tedious manual process I don&rsquo;t do it as often as I should.</p>

<p>What PhotoArchive does is copy new photos &amp; videos from your iOS device to an FTP server, over Wi-Fi.
The Western Digital My Book NAS, like most NAS, supports FTP (File Transfer Protocol).</p>

<p>This means that when I get home I can effortlessly back up new photos &amp; videos I&rsquo;ve taken that day &ndash; no turning on computers, no USB cables etc.</p>

<h2>What it does (marketing version)</h2>

<blockquote><p>PhotoArchive saves your irreplaceable memories, your photos &amp; videos from your iPhone, iPad, or iPod touch to your home storage over Wi-Fi.</p></blockquote>

<p>PhotoArchive archives to your home storage device, e.g. NAS (Network Attached Storage), or home computer, using FTP (File Transfer Protocol).</p>

<p>Most NAS devices already support FTP, but if you are using a computer you will need an FTP server, see here &ndash; [Mac OS X][ftp_mac], or [Windows][ftp_win].</p>

<p>FTP should only be used on Wi-Fi with WPA2 security, with your storage device
on the same network. Don&rsquo;t do it over the Internet! Be security smart.</p>

<p>What does PhotoArchive do?</p>

<ol>
<li><p><strong>Save Money</strong> &ndash; When you use PhotoArchive you can turn off the Camera Roll from iCloud Backup, and stay under the 5.0 GB free limit. Use iCloud Backup to back up your accounts, documents, and settings.</p></li>
<li><p><strong>Save Time</strong> &ndash; Stop manually backing up your photos &amp; videos to your Mac or PC (are you still using USB cables?). Stop manually backing up your iPhone, iPad, or iPod touch to iTunes!</p></li>
<li><p><strong>Archives</strong> &ndash; PhotoArchive does not synchronise. PhotoArchive will not download photos or videos from your home storage device to your iPhone, iPad, or iPod touch.</p></li>
<li><p><strong>Never Deletes</strong> &ndash; PhotoArchive will never delete a photo or video from your home storage device, or from your iPhone, iPad, or iPod touch.</p></li>
<li><p><strong>Smart Archive</strong> &ndash; PhotoArchive remembers the previous archive, and will only upload new photos &amp; videos, so it&rsquo;s <em>FAST</em>!</p></li>
<li><p><strong>Smart Photo View</strong> &ndash; Shows you the photos &amp; videos you have not archived (in danger of being lost forever), and the ones you have (safe in the event that something happens to your iPhone, iPad, or iPod touch).</p></li>
<li><p><strong>Full Resolution &amp; Metadata</strong> &ndash; PhotoArchive uploads photos &amp; videos in their full resolution with all metadata (information about the photos &amp; videos, e.g. where you took them).</p></li>
</ol>


<h2>Design thinking</h2>

<p>The main view that greets the user visually shows them all photos &amp; videos on their iOS device, grouped into state &ndash; not archived, or archived.
It first shows photos &amp; videos that are not archived (in danger of being lost forever), and then photos &amp; videos that are archived (safe).</p>

<p>The user can either setup their archive destination, or start archiving if already setup &amp; there are new photos or videos.</p>

<p>I took inspiration from the iOS Photos app, and show photos &amp; videos as varying square sizes.</p>

<p>The Not Archived section photos &amp; videos are shown as large squares up to a certain number, and then get smaller.
Large squares let you see the few photos &amp; videos that you haven&rsquo;t archived up close.
If there&rsquo;s lots, then they are shown as small squares to give you a visual sense of how many there are.
The section header is the PhotoArchive logo on red &ndash; danger!</p>

<p>The Archived section shows photos &amp; videos as small squares; they are safe, so you don&rsquo;t need to see what they are, just get a visual sense of how many there are.
The section header is the PhotoArchive logo on blue (this is the app icon) &ndash; safe.</p>

<p>The design allows both sections to appear together on the main view without much scrolling required.</p>

<h2>When will it be released</h2>

<p>PhotoArchive is functionally complete.
I&rsquo;m currently cleaning, polishing &amp; testing it.
It would be great to have a few testers, so if you&rsquo;d like to test it out &amp; are willing to provide feedback, then contact me at <a href="peter.boni@gmail.com">peter.boni@gmail.com</a>.</p>

<h2>The future</h2>

<p>Since the purpose of PhotoArchive is to save your irreplaceable memories, i&rsquo;ve thought about adding support for offsite archiving to cloud storage such as Amazon S3 or Glacier.</p>

<p>Amazon Glacier is attractive because of it&rsquo;s extreme lost cost &ndash; USD$0.01 per GB (gigabyte) per month.
That&rsquo;s just over USD$10 per month to archive 1TB (terabyte) of photos &amp; videos!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mobile Design Details: Hide/Show Passwords - iOS Implementation and Thoughts]]></title>
    <link href="http://www.peterboni.net/blog/2014/01/11/mobile-design-details-hide-show-passwords-ios-implementation-and-thoughts/"/>
    <updated>2014-01-11T07:00:00+08:00</updated>
    <id>http://www.peterboni.net/blog/2014/01/11/mobile-design-details-hide-show-passwords-ios-implementation-and-thoughts</id>
    <content type="html"><![CDATA[<p>I read a tweet from Luke Wroblewski this morning, which lead to a blog post he
published on November 7, 2012 called <a href="http://www.lukew.com/ff/entry.asp?1653">Mobile Design Details: Hide/Show Passwords</a>.</p>

<p>The fact that I have to manually enter passwords on mobile has been a constant source
of frustration for me, with this only making it worse.
Sadly his advice has not caught on much with app/site designers &amp; developers.
I decided to see how hard it was to quickly implement on iOS with a few thoughts along the way.</p>

<!--more-->


<h2>Implementation</h2>

<p>It turns out it&rsquo;s very simple.</p>

<p>Using Xcode 5.0.2, do File &ndash; New &ndash; Project &ndash; Application: Single View Application.</p>

<p>Add a Text Field to the single <strong>View Controller</strong> in <strong>Main.storyboard</strong>. You can add
Placeholder text to give the user a visual indication of what they should be doing
with the field.</p>

<p>Create an Outlet Connection in <strong>ViewController.h</strong> called <strong>password</strong>, which should look
like this.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> : <span class="nc">UIViewController</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">@property</span> <span class="p">(</span><span class="n">weak</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="kt">IBOutlet</span> <span class="n">UITextField</span> <span class="o">*</span><span class="n">password</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>In <strong>ViewController.m</strong>, put the following code into <strong>viewDidLoad</strong>.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">viewDidLoad</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">CGSize</span> <span class="n">hideShowSize</span> <span class="o">=</span> <span class="p">[</span><span class="s">@&quot;SHOWX&quot;</span> <span class="nl">sizeWithAttributes:</span><span class="err">@</span><span class="p">{</span><span class="nl">NSFontAttributeName:</span><span class="p">[</span><span class="n">UIFont</span> <span class="nl">systemFontOfSize:</span><span class="mf">14.0f</span><span class="p">]}];</span>
</span><span class='line'><span class="n">UIButton</span> <span class="o">*</span><span class="n">hideShow</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIButton</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFrame:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">hideShowSize</span><span class="p">.</span><span class="n">width</span><span class="p">,</span> <span class="n">self</span><span class="p">.</span><span class="n">password</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">)];</span>
</span><span class='line'><span class="p">[</span><span class="n">hideShow</span><span class="p">.</span><span class="n">titleLabel</span> <span class="nl">setFont:</span><span class="p">[</span><span class="n">UIFont</span> <span class="nl">systemFontOfSize:</span><span class="mf">14.0f</span><span class="p">]];</span>
</span><span class='line'><span class="p">[</span><span class="n">hideShow</span> <span class="nl">setTitle:</span><span class="s">@&quot;HIDE&quot;</span> <span class="nl">forState:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">hideShow</span> <span class="nl">setTitleColor:</span><span class="p">[</span><span class="n">UIColor</span> <span class="n">grayColor</span><span class="p">]</span> <span class="nl">forState:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">password</span><span class="p">.</span><span class="n">rightView</span> <span class="o">=</span> <span class="n">hideShow</span><span class="p">;</span>
</span><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">password</span><span class="p">.</span><span class="n">rightViewMode</span> <span class="o">=</span> <span class="n">UITextFieldViewModeAlways</span><span class="p">;</span>
</span><span class='line'><span class="p">[</span><span class="n">hideShow</span> <span class="nl">addTarget:</span><span class="n">self</span> <span class="nl">action:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">hideShow:</span><span class="p">)</span> <span class="nl">forControlEvents:</span><span class="n">UIControlEventTouchUpInside</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>And then create <strong>hideShow</strong>.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">hideShow:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="n">sender</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">UIButton</span> <span class="o">*</span><span class="n">hideShow</span> <span class="o">=</span> <span class="p">(</span><span class="n">UIButton</span> <span class="o">*</span><span class="p">)</span><span class="n">self</span><span class="p">.</span><span class="n">password</span><span class="p">.</span><span class="n">rightView</span><span class="p">;</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">self</span><span class="p">.</span><span class="n">password</span><span class="p">.</span><span class="n">secureTextEntry</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">password</span><span class="p">.</span><span class="n">secureTextEntry</span> <span class="o">=</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="n">hideShow</span> <span class="nl">setTitle:</span><span class="s">@&quot;SHOW&quot;</span> <span class="nl">forState:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">password</span><span class="p">.</span><span class="n">secureTextEntry</span> <span class="o">=</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="n">hideShow</span> <span class="nl">setTitle:</span><span class="s">@&quot;HIDE&quot;</span> <span class="nl">forState:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">password</span> <span class="n">becomeFirstResponder</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>You should get something like this.</p>

<p><img class="fancybox center" src="/media/images/2014-01-11-mobile-design-details-hide-show-passwords-ios-implementation-and-thoughts/1.png" width="594" height="270"></p>

<p>You can immediately touch &amp; start entering your un-obfuscated password.</p>

<p><img class="fancybox center" src="/media/images/2014-01-11-mobile-design-details-hide-show-passwords-ios-implementation-and-thoughts/2.png" width="594" height="270"></p>

<p>If you touch &lsquo;HIDE&rsquo; then your password is obfuscated, and similarly touching &lsquo;SHOW&rsquo; will
go back to your un-obfuscated password.</p>

<p><img class="fancybox center" src="/media/images/2014-01-11-mobile-design-details-hide-show-passwords-ios-implementation-and-thoughts/3.png" width="594" height="270"></p>

<h2>Thoughts</h2>

<p>It&rsquo;s important to remember that we&rsquo;re simply toggling the iOS UITextField &lsquo;Secure&rsquo;
functionality, so when the UITextField is not secure, the user can copy the contents
of the UITextField.</p>

<p>Therefore you should <strong>only</strong> use this pattern in Sign Up &amp; Login views, <strong>not</strong> views
where you can view/edit account details for a service.</p>

<p><img class="fancybox center" src="/media/images/2014-01-11-mobile-design-details-hide-show-passwords-ios-implementation-and-thoughts/4.png" width="594" height="270"></p>

<p><img class="fancybox center" src="/media/images/2014-01-11-mobile-design-details-hide-show-passwords-ios-implementation-and-thoughts/5.png" width="594" height="270"></p>

<p>This still doesn&rsquo;t remove the frustration of having to manually enter passwords on mobile.
It would be great to see Apple take the lead with iOS, and extend the iCloud Keychain /
Safari Password AutoFill (and generator) features to native apps.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Design: Little Things Matter]]></title>
    <link href="http://www.peterboni.net/blog/2013/09/22/design-little-things-matter/"/>
    <updated>2013-09-22T07:00:00+08:00</updated>
    <id>http://www.peterboni.net/blog/2013/09/22/design-little-things-matter</id>
    <content type="html"><![CDATA[<p>I like running &amp; listening to music using my iPhone. Up until recently I was using Sennheiser In-Ear Headphones without a remote or microphone. The headphones caused me a few problems before I finally decided to buy new headphones, which made me think about design.</p>

<!--more-->


<p>The first problem with my current headphones was that even though they were in-ear, they kept falling out, which was really annoying. The second problem was that I couldn&rsquo;t forward songs. Listening to a slow or uninspiring song approaching a hill is hard work. The third problem sometimes occurred with an incoming message. Fumbling to get the iPhone out of my <a href="http://www.spibelt.com.au">SPI Belt</a> &amp; read the message while running (to see if it was urgent) was difficult.</p>

<p>I did a quick review of headphones with remote &amp; microphone in the Apple Store and purchased the Sennheiser OCX 685i In-Ear Sports Headphones.</p>

<p><img class="fancybox center" src="/media/images/2013-09-22-design-little-things-matter/img_2357.jpg" width="600" height="400" title="Sennheiser OCX 685i In-Ear Sports Headphones" ></p>

<p>The ear clip design, combined with the lightweight cord &amp; clip means that they stay secure while running. No more falling out. The remote &amp; microphone work &ndash; I have full control over music. I can also use Siri to listen to incoming messages, and dictate a reply. I can even use Siri to <a href="https://twitter.com/peterboni/status/379924494527131649">Tweet</a>. The headphones are also sweat &amp; water resistant. Nearly perfect.</p>

<blockquote><p>The only problem I have with them is the <em>design</em> of the remote, which detracts from the overall experience of using the product.</p></blockquote>

<p>Compare the design of the remote on the Sennheiser in the above picture to the remote on the Apple EarPods in the below picture.</p>

<p><img class="fancybox center" src="/media/images/2013-09-22-design-little-things-matter/img_2360.jpg" width="600" height="400" title="Apple EarPods with Remote and Mic" ></p>

<p>Can you guess what the problem is? When I&rsquo;m running &amp; listening to music, I&rsquo;m watching the road ahead. I move my fingers to the remote near my neck, grab it, and feel for the controls. They&rsquo;re all placed together &amp; feel like they blend into each other. It feels like one button. This is the exact opposite experience with the Apple EarPods remote. On the Apple EarPods remote the clear indent in the middle means I feel immediately by touch the distinction between the 3 buttons, and hence how to activate the different functions that the 3 buttons enable.</p>

<p>I was reading this article today &ndash; <a href="http://www.businessweek.com/articles/2013-09-20/apple-ceo-tim-cooks-complete-interview-with-bloomberg-businessweek">Tim Cook: The Complete Interview</a>, and there are a few really good quotes from Tim Cook that I think are relevant.</p>

<blockquote><p>&lsquo;We’re a product company, and so the products show the values of a company. They speak to innovation. They speak to caring about every detail. They’re a reminder of how incredibly important experience is &hellip; every detail has been thought through. The experience is an “Aha” moment.&rsquo;</p></blockquote>

<p>And then this one.</p>

<blockquote><p>&lsquo;Nobody worries about buttons and finishes. Nobody really worries about the experience, and we do. We’re really proud that we do.&rsquo;</p></blockquote>

<p>Design is important, and only going to become more so &ndash; <a href="http://www.fastcodesign.com/3017485/the-3-future-waves-in-design-and-how-to-ride-them">The 3 Future Waves In Design, And How To Ride Them</a>.</p>
]]></content>
  </entry>
  
</feed>
