<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Dev | Peter Boni]]></title>
  <link href="http://www.peterboni.net/blog/categories/dev/atom.xml" rel="self"/>
  <link href="http://www.peterboni.net/"/>
  <updated>2013-02-17T14:04:05+08:00</updated>
  <id>http://www.peterboni.net/</id>
  <author>
    <name><![CDATA[Peter Boni]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[#failmeaningfully]]></title>
    <link href="http://www.peterboni.net/blog/2013/01/01/failmeaningfully/"/>
    <updated>2013-01-01T07:00:00+08:00</updated>
    <id>http://www.peterboni.net/blog/2013/01/01/failmeaningfully</id>
    <content type="html"><![CDATA[<p>It was August 2010. Over 2 years ago. My beautiful daughter Abigail was 2 years old. The iPhone 4 had just come out, and the smartphone revolution was in full swing. All I needed was an idea. Somehow I found myself become part of a like minded, passionate &amp; committed team, with some of the best people I have ever had the privilege or pleasure to work with. I say somehow because I've always tried to go with the flow. It just happened. Redistore was born.</p>

<p><img class="fancybox center" src="/media/images/2013-01-01-failmeaningfully/WebSite1.png" width="569" height="635" title="Redistore Web Site" ></p>

<p>The idea &amp; vision was simple. Wouldn't it be cool if you could order &amp; pay for your coffee <em>before</em> you arrived at the store, just waltz in, bypass the queue, pick it up &amp; go. It's paid for so there's no fumbling around for change, or paying with a card which was time consuming before contactless payment, e.g. MasterCard PayPass. I thought the idea had potential. The team thought the idea had potential. People we talked to thought the idea had potential. We decided as a team to take a risk. '<a href="http://en.wikipedia.org/wiki/Field_of_Dreams">If you build it, he will come</a>', we all heard the voice whisper. Others were skeptical, but not us. We built it.</p>

<p>2 years later, and Redistore has failed. This is what I learnt.</p>

<h2>Reality</h2>

<p>I can still remember how it started. The excitement of exploring the idea. Formulating it. Talking about it. Becoming a team. It felt awesome. That's the Hollywood beginning.</p>

<p>The reality was a hard slog of trying to work two jobs. 15 to 16 hour days, 5 to 6 days a week. Rise at 6am, cycle to work &amp; be working by 7am. Leave at 4pm. Be home &amp; sorted by 5pm. Two hours to spend with my family, which I'm guilty of not doing enough of. At work by 7pm. Work till 9pm or 10pm. Rinse &amp; repeat. And don't forget the weekends. You get the picture. I had no life.</p>

<h2>Tech</h2>

<p><em>But</em> we built something that's bloody cool &amp; has possibility. A fully customisable, real time online ordering system for low value, high volume consumables. Coffee stores. Take away food. The order is paid for by the customer using their Redistore account which they can 'top up' using PayPal or a Credit Card. The store gets a verified order. It's in real time. There's no queueing. Win win.</p>

<p>The technology &amp; platform that we built was the fun part.</p>

<p>The customer web client was built using Sencha ExtJS 3 and supports all major browsers. It was designed &amp; built from scratch to provide a <em>fast</em> UX (User Experience) for browsing stores &amp; ordering, unlike most classic page request &amp; response web stores. ExtJS is an amazing platform, but has a steep learning curve, and ExtJS 4 broke compatibility for ExtJS 3 apps; there is significant work required to upgrade your app.</p>

<p><img class="fancybox" src="/media/images/2013-01-01-failmeaningfully/WebClient1.png" width="795" height="600" title="Redistore Web Site" ></p>

<p><img class="fancybox" src="/media/images/2013-01-01-failmeaningfully/WebClient2.png" width="795" height="600" title="Redistore Web Site" ></p>

<p><img class="fancybox" src="/media/images/2013-01-01-failmeaningfully/WebClient3.png" width="795" height="600" title="Redistore Web Site" ></p>

<p>The now defunct customer mobile client was built using Sencha Touch 1. The native vs. web app mobile holy war was raging, and we decided to build a web app. It was a mistake. The mobile client worked adequately on iOS, but on Android it was unusable. The tools were not ready. Facebook had not yet <a href="http://techcrunch.com/2012/09/11/mark-zuckerberg-our-biggest-mistake-with-mobile-was-betting-too-much-on-html5/">admitted their mistake</a>, nor Sencha fired their <a href="http://www.sencha.com/blog/the-making-of-fastbook-an-html5-love-story/">Fastbook</a> return. We needed a <em>great</em> customer UX, and didn't have it.</p>

<p><img class="fancybox left" src="/media/images/2013-01-01-failmeaningfully/iPhoneApp1.png" width="320" height="548" title="Redistore iPhone App" ></p>

<p>The store receiver client was also built with Sencha Touch, and performs adequately for stores on an iPod.</p>

<p>The web clients communicate via Ajax to the back end action style JSON based web services developed using .NET WCF. If building using the same core technology now, we'd seriously look at Web API &amp; RESTful services. There's also a ton of awesome back-end enterprise system type stuff (database, reconciliation, reporting, MI etc.), that was built by a <a href="http://en.wikipedia.org/wiki/Cylon_(Battlestar_Galactica)">Cylon</a>. Seriously. They work <em>hard</em>, I guess because they don't need to sleep.</p>

<p>To address the <em>great</em> customer mobile UX, after go-live we spent 3 months building a native iPhone app, and 3 months building a native Android app. It was a great learning experience at the cost of 6 months of effort. Without getting into details of our approach, or religious debates, I hope that we (the industry) can move <strong>forward</strong> to <em>the web</em>. How we do that is for <a href="http://www.okito.net/post/38255553240/the-mobile-web">smart people</a> to <a href="http://lilly.tumblr.com/post/38309067913/asymmetry">work out</a>.</p>

<h2>Go Live</h2>

<p>We went live on Friday 1st April 2011 (oh the irony) after 8 months of intense development. There were teething problems as with any new production system, and we worked through them to get it to a stable state.</p>

<p>We tried to sell it mostly to coffee stores the old fashioned way, by approaching them, talking to them about it, showing them what it could do. Once we had a store on board we did really simple customer advertising at the store.</p>

<p>Although it's <em>far</em> from being a runaway success, it has &amp; continues to be <em>successful</em>, in that it ticks along &amp; is used every single business day, with no issues.</p>

<p>Over 18 months in production, what are the stats?</p>

<ul>
<li>250 accounts. 43 active in November 2012. 68 with a balance > $5.</li>
<li>5 stores. 2 active.</li>
<li>4,712 orders (multiple items per order). 63% using web. 36% using mobile.</li>
<li>1,900 top ups (min $5 per top up).</li>
</ul>


<p>The order percentages between web &amp; mobile are interesting. The 2 active stores are located in office buildings, and it implies customers prefer using the web client to order from their desks, before going down to pickup their order.</p>

<h2>Reflection</h2>

<p>The enthusiasm &amp; commitment for the idea &amp; vision has dispersed. What it could have been didn't materialise, and not by lack of effort.</p>

<p>I don't think we really understood our customer, as we really just replaced phone orders. We didn't have an automated store onboarding process, so bringing stores on was a long complicated process. We didn't do marketing.</p>

<p>We took a gamble, and it didn't pay off. We failed.</p>

<h2>End</h2>

<p>It's time to move on. To take what I've learnt &amp; move forward. I'm excited about seeking new ideas &amp; projects. Exploring. Finding. Trying. I love the process of creating things. I've heard the expression '<strong>fail fast</strong>', but I think you should '<strong>fail meaningfully</strong>' at something you choose, have <a href="http://www.zurb.com/article/1131/passion-to-fail-fast">passion</a>
 for, believe in, and work hard at. Learning takes quality time.</p>

<p>It's time to move on â€¦ <em>after</em> I finish reading <a href="http://theleanstartup.com">The Lean Startup</a> by Eric Ries.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Demon Hacker]]></title>
    <link href="http://www.peterboni.net/blog/2012/09/01/demon-hacker/"/>
    <updated>2012-09-01T16:05:00+08:00</updated>
    <id>http://www.peterboni.net/blog/2012/09/01/demon-hacker</id>
    <content type="html"><![CDATA[<p>In early 1995 (17 years ago) I created an <a href="http://en.wikipedia.org/wiki/MS-DOS">MS-DOS</a>
app called Demon Hacker.</p>

<p>It's purpose was to enable a user to patch (rather crudely, but effectively)
PC games files &amp; their created saved game files to cheat.</p>

<p>I got more of a kick out of building the app using
<a href="http://en.wikipedia.org/wiki/Turbo_Pascal">Turbo Pascal</a>, and giving it to my friends
to use than I did playing &amp; cheating in the games.</p>

<p>17 years is a <em>long</em> time in computer technology. In 1995 the Internet was emerging, and
I knew that it had been put on a few FTP sites, but could I find it now?</p>

<p>After a few minutes with Google I had found &amp; downloaded the ZIP file.
(And made sure to scan it with antivirus software).</p>

<p><em>Wow!</em></p>

<p>The problem now was that it was a 16-bit MS-DOS app.</p>

<p>With only Mac OS X Mountain Lion, and Windows 7, both 64-bit, I thought I would have
to resort to setting up a VM (Virtual Machine).</p>

<p>Another Google and I found <a href="http://www.dosbox.com">DOSBox</a>.
I download &amp; opened DOSBox on Mac OS X.</p>

<p><em>Double wow!</em></p>

<p>I now had a directory listing. Look at those dates!</p>

<p><img class="fancybox" src="/media/images/2012-09-01-demon-hacker/dir.png" title="Demon Hacker" ></p>

<p>Check out DEMON.EXE. That's 29,408 bytes for the main application.
UI (User Interface).
Logic.
Everything.
That's 29 kilobytes (KB).</p>

<p><em>Holy crap!</em></p>

<p>Next step, would it run?</p>

<p><em>BOOM!</em></p>

<p>An app that I had created 17 years ago was running in a DOS emulator on my
MAC OS X system.</p>

<p><img class="fancybox" src="/media/images/2012-09-01-demon-hacker/run.png" title="Demon Hacker" ></p>

<p>Here's the proof - the help screen. You have to admit, it's very helpful :)</p>

<p><img class="fancybox" src="/media/images/2012-09-01-demon-hacker/run-help.png" title="Demon Hacker" ></p>

<p>It even supports in that 29 KB size changing the application font to a medieval
type font. Typical font files are MB these days.</p>

<p><img class="fancybox" src="/media/images/2012-09-01-demon-hacker/run-font.png" title="Demon Hacker" ></p>

<p>The great thing about Demon Hacker is that it was open.
Extendable.
Anyone with a PC game, a HEX editor, and some spare time could create hacks
for games by editing the DEMON.DAT text file.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>Alone in the Dark
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>save[0..5].itd
</span><span class='line'>save??.itd
</span><span class='line'>//25700 oil for the lamp
</span><span class='line'>19856,64
</span><span class='line'>19857,64
</span><span class='line'>//25700 rifle ammo
</span><span class='line'>19866,64
</span><span class='line'>19867,64
</span><span class='line'>//25700 health points
</span><span class='line'>19882,64
</span><span class='line'>19883,64
</span><span class='line'>//25700 pistol ammo
</span><span class='line'>20024,64
</span><span class='line'>20025,64
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>And Demon Hacker would then let anyone use that cheat.</p>

<p><img class="fancybox" src="/media/images/2012-09-01-demon-hacker/hack.png" title="Demon Hacker" ></p>

<p>If only GitHub had existed back in 1995 the source code may not have been lost.
If you're feeling nostalgic get DOSBox, your old games, and get
<a href="http://www.github.com/peterboni/demonhacker">Demon Hacker</a>.</p>

<p>This trip back down memory lane has reminded me of a few things.
The Internet, WWW, Google &amp; technology are amazing things.
Also that i'm a hacker, and always will be.</p>
]]></content>
  </entry>
  
</feed>
