<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Dev | Peter Boni]]></title>
  <link href="http://www.peterboni.net/blog/categories/dev/atom.xml" rel="self"/>
  <link href="http://www.peterboni.net/"/>
  <updated>2014-02-22T16:09:18+08:00</updated>
  <id>http://www.peterboni.net/</id>
  <author>
    <name><![CDATA[Peter Boni]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PhotoArchive for iPhone]]></title>
    <link href="http://www.peterboni.net/blog/2014/02/15/photoarchive/"/>
    <updated>2014-02-15T07:00:00+08:00</updated>
    <id>http://www.peterboni.net/blog/2014/02/15/photoarchive</id>
    <content type="html"><![CDATA[<blockquote><p>Update: PhotoArchive now has a permanent home.
For the latest information &amp; download link visit <a href="/photoarchive">PhotoArchive for iPhone</a>.</p></blockquote>

<p>I take a lot of photos &amp; videos with my iPhone.
It&rsquo;s always with me, so it&rsquo;s convenient, and the quality is good.
My DSLR body &amp; lenses produce superior quality, but are usually left at home gathering dust.</p>

<p>When I take new photos or videos, often of my family, I worry that if something were to happen to my iPhone, those irreplaceable memories will be lost forever.</p>

<p>There are many solutions for this need, for example iCloud Backup, the Dropbox app, or the Amazon Cloud Drive app, but they all have varying costs &amp; limitations.
I wanted a simple solution for me, and that&rsquo;s why I decided to build an app as a side project &ndash; PhotoArchive for iPhone.
When released, PhotoArchive will be free for everyone on the App Store.</p>

<!--more-->


<h2>What it looks like</h2>

<div align="center">
<img src="http://www.peterboni.net/media/images/2014-02-15-photoarchive/black.png" style="border:none !important;">
<img src="http://www.peterboni.net/media/images/2014-02-15-photoarchive/white.png" style="border:none !important;">
</div>


<p></p>


<h2>What it does</h2>

<p>I have a Western Digital My Book NAS (Network Attached Storage) at home that is always on.
I use it for file storage for computers on the network, and DLNA streaming to the living room TV via the PS3.</p>

<p>I copy new photos &amp; videos from my &amp; my wife&rsquo;s iPhones by manually connecting them to a computer via USB, and downloading the new ones.
Because it&rsquo;s a tedious manual process I don&rsquo;t do it as often as I should.</p>

<p>What PhotoArchive does is copy new photos &amp; videos from your iOS device to an FTP server, over Wi-Fi.
The Western Digital My Book NAS, like most NAS, supports FTP (File Transfer Protocol).</p>

<p>This means that when I get home I can effortlessly back up new photos &amp; videos I&rsquo;ve taken that day &ndash; no turning on computers, no USB cables etc.</p>

<h2>What it does (marketing version)</h2>

<blockquote><p>PhotoArchive saves your irreplaceable memories, your photos &amp; videos from your iPhone, iPad, or iPod touch to your home storage over Wi-Fi.</p></blockquote>

<p>PhotoArchive archives to your home storage device, e.g. NAS (Network Attached Storage), or home computer, using FTP (File Transfer Protocol).</p>

<p>Most NAS devices already support FTP, but if you are using a computer you will need an FTP server, see here &ndash; [Mac OS X][ftp_mac], or [Windows][ftp_win].</p>

<p>FTP should only be used on Wi-Fi with WPA2 security, with your storage device
on the same network. Don&rsquo;t do it over the Internet! Be security smart.</p>

<p>What does PhotoArchive do?</p>

<ol>
<li><p><strong>Save Money</strong> &ndash; When you use PhotoArchive you can turn off the Camera Roll from iCloud Backup, and stay under the 5.0 GB free limit. Use iCloud Backup to back up your accounts, documents, and settings.</p></li>
<li><p><strong>Save Time</strong> &ndash; Stop manually backing up your photos &amp; videos to your Mac or PC (are you still using USB cables?). Stop manually backing up your iPhone, iPad, or iPod touch to iTunes!</p></li>
<li><p><strong>Archives</strong> &ndash; PhotoArchive does not synchronise. PhotoArchive will not download photos or videos from your home storage device to your iPhone, iPad, or iPod touch.</p></li>
<li><p><strong>Never Deletes</strong> &ndash; PhotoArchive will never delete a photo or video from your home storage device, or from your iPhone, iPad, or iPod touch.</p></li>
<li><p><strong>Smart Archive</strong> &ndash; PhotoArchive remembers the previous archive, and will only upload new photos &amp; videos, so it&rsquo;s <em>FAST</em>!</p></li>
<li><p><strong>Smart Photo View</strong> &ndash; Shows you the photos &amp; videos you have not archived (in danger of being lost forever), and the ones you have (safe in the event that something happens to your iPhone, iPad, or iPod touch).</p></li>
<li><p><strong>Full Resolution &amp; Metadata</strong> &ndash; PhotoArchive uploads photos &amp; videos in their full resolution with all metadata (information about the photos &amp; videos, e.g. where you took them).</p></li>
</ol>


<h2>Design thinking</h2>

<p>The main view that greets the user visually shows them all photos &amp; videos on their iOS device, grouped into state &ndash; not archived, or archived.
It first shows photos &amp; videos that are not archived (in danger of being lost forever), and then photos &amp; videos that are archived (safe).</p>

<p>The user can either setup their archive destination, or start archiving if already setup &amp; there are new photos or videos.</p>

<p>I took inspiration from the iOS Photos app, and show photos &amp; videos as varying square sizes.</p>

<p>The Not Archived section photos &amp; videos are shown as large squares up to a certain number, and then get smaller.
Large squares let you see the few photos &amp; videos that you haven&rsquo;t archived up close.
If there&rsquo;s lots, then they are shown as small squares to give you a visual sense of how many there are.
The section header is the PhotoArchive logo on red &ndash; danger!</p>

<p>The Archived section shows photos &amp; videos as small squares; they are safe, so you don&rsquo;t need to see what they are, just get a visual sense of how many there are.
The section header is the PhotoArchive logo on blue (this is the app icon) &ndash; safe.</p>

<p>The design allows both sections to appear together on the main view without much scrolling required.</p>

<h2>When will it be released</h2>

<p>PhotoArchive is functionally complete.
I&rsquo;m currently cleaning, polishing &amp; testing it.
It would be great to have a few testers, so if you&rsquo;d like to test it out &amp; are willing to provide feedback, then contact me at <a href="peter.boni@gmail.com">peter.boni@gmail.com</a>.</p>

<h2>The future</h2>

<p>Since the purpose of PhotoArchive is to save your irreplaceable memories, i&rsquo;ve thought about adding support for offsite archiving to cloud storage such as Amazon S3 or Glacier.</p>

<p>Amazon Glacier is attractive because of it&rsquo;s extreme lost cost &ndash; USD$0.01 per GB (gigabyte) per month.
That&rsquo;s just over USD$10 per month to archive 1TB (terabyte) of photos &amp; videos!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mobile Design Details: Hide/Show Passwords - iOS Implementation and Thoughts]]></title>
    <link href="http://www.peterboni.net/blog/2014/01/11/mobile-design-details-hide-show-passwords-ios-implementation-and-thoughts/"/>
    <updated>2014-01-11T07:00:00+08:00</updated>
    <id>http://www.peterboni.net/blog/2014/01/11/mobile-design-details-hide-show-passwords-ios-implementation-and-thoughts</id>
    <content type="html"><![CDATA[<p>I read a tweet from Luke Wroblewski this morning, which lead to a blog post he
published on November 7, 2012 called <a href="http://www.lukew.com/ff/entry.asp?1653">Mobile Design Details: Hide/Show Passwords</a>.</p>

<p>The fact that I have to manually enter passwords on mobile has been a constant source
of frustration for me, with this only making it worse.
Sadly his advice has not caught on much with app/site designers &amp; developers.
I decided to see how hard it was to quickly implement on iOS with a few thoughts along the way.</p>

<!--more-->


<h2>Implementation</h2>

<p>It turns out it&rsquo;s very simple.</p>

<p>Using Xcode 5.0.2, do File &ndash; New &ndash; Project &ndash; Application: Single View Application.</p>

<p>Add a Text Field to the single <strong>View Controller</strong> in <strong>Main.storyboard</strong>. You can add
Placeholder text to give the user a visual indication of what they should be doing
with the field.</p>

<p>Create an Outlet Connection in <strong>ViewController.h</strong> called <strong>password</strong>, which should look
like this.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> : <span class="nc">UIViewController</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">@property</span> <span class="p">(</span><span class="n">weak</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="kt">IBOutlet</span> <span class="n">UITextField</span> <span class="o">*</span><span class="n">password</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>In <strong>ViewController.m</strong>, put the following code into <strong>viewDidLoad</strong>.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">viewDidLoad</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">CGSize</span> <span class="n">hideShowSize</span> <span class="o">=</span> <span class="p">[</span><span class="s">@&quot;SHOWX&quot;</span> <span class="nl">sizeWithAttributes:</span><span class="err">@</span><span class="p">{</span><span class="nl">NSFontAttributeName:</span><span class="p">[</span><span class="n">UIFont</span> <span class="nl">systemFontOfSize:</span><span class="mf">14.0f</span><span class="p">]}];</span>
</span><span class='line'><span class="n">UIButton</span> <span class="o">*</span><span class="n">hideShow</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIButton</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFrame:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">hideShowSize</span><span class="p">.</span><span class="n">width</span><span class="p">,</span> <span class="n">self</span><span class="p">.</span><span class="n">password</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">)];</span>
</span><span class='line'><span class="p">[</span><span class="n">hideShow</span><span class="p">.</span><span class="n">titleLabel</span> <span class="nl">setFont:</span><span class="p">[</span><span class="n">UIFont</span> <span class="nl">systemFontOfSize:</span><span class="mf">14.0f</span><span class="p">]];</span>
</span><span class='line'><span class="p">[</span><span class="n">hideShow</span> <span class="nl">setTitle:</span><span class="s">@&quot;HIDE&quot;</span> <span class="nl">forState:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">hideShow</span> <span class="nl">setTitleColor:</span><span class="p">[</span><span class="n">UIColor</span> <span class="n">grayColor</span><span class="p">]</span> <span class="nl">forState:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">password</span><span class="p">.</span><span class="n">rightView</span> <span class="o">=</span> <span class="n">hideShow</span><span class="p">;</span>
</span><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">password</span><span class="p">.</span><span class="n">rightViewMode</span> <span class="o">=</span> <span class="n">UITextFieldViewModeAlways</span><span class="p">;</span>
</span><span class='line'><span class="p">[</span><span class="n">hideShow</span> <span class="nl">addTarget:</span><span class="n">self</span> <span class="nl">action:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">hideShow:</span><span class="p">)</span> <span class="nl">forControlEvents:</span><span class="n">UIControlEventTouchUpInside</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>And then create <strong>hideShow</strong>.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">hideShow:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="n">sender</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">UIButton</span> <span class="o">*</span><span class="n">hideShow</span> <span class="o">=</span> <span class="p">(</span><span class="n">UIButton</span> <span class="o">*</span><span class="p">)</span><span class="n">self</span><span class="p">.</span><span class="n">password</span><span class="p">.</span><span class="n">rightView</span><span class="p">;</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">self</span><span class="p">.</span><span class="n">password</span><span class="p">.</span><span class="n">secureTextEntry</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">password</span><span class="p">.</span><span class="n">secureTextEntry</span> <span class="o">=</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="n">hideShow</span> <span class="nl">setTitle:</span><span class="s">@&quot;SHOW&quot;</span> <span class="nl">forState:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">password</span><span class="p">.</span><span class="n">secureTextEntry</span> <span class="o">=</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="n">hideShow</span> <span class="nl">setTitle:</span><span class="s">@&quot;HIDE&quot;</span> <span class="nl">forState:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">password</span> <span class="n">becomeFirstResponder</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>You should get something like this.</p>

<p><img class="fancybox center" src="/media/images/2014-01-11-mobile-design-details-hide-show-passwords-ios-implementation-and-thoughts/1.png" width="594" height="270"></p>

<p>You can immediately touch &amp; start entering your un-obfuscated password.</p>

<p><img class="fancybox center" src="/media/images/2014-01-11-mobile-design-details-hide-show-passwords-ios-implementation-and-thoughts/2.png" width="594" height="270"></p>

<p>If you touch &lsquo;HIDE&rsquo; then your password is obfuscated, and similarly touching &lsquo;SHOW&rsquo; will
go back to your un-obfuscated password.</p>

<p><img class="fancybox center" src="/media/images/2014-01-11-mobile-design-details-hide-show-passwords-ios-implementation-and-thoughts/3.png" width="594" height="270"></p>

<h2>Thoughts</h2>

<p>It&rsquo;s important to remember that we&rsquo;re simply toggling the iOS UITextField &lsquo;Secure&rsquo;
functionality, so when the UITextField is not secure, the user can copy the contents
of the UITextField.</p>

<p>Therefore you should <strong>only</strong> use this pattern in Sign Up &amp; Login views, <strong>not</strong> views
where you can view/edit account details for a service.</p>

<p><img class="fancybox center" src="/media/images/2014-01-11-mobile-design-details-hide-show-passwords-ios-implementation-and-thoughts/4.png" width="594" height="270"></p>

<p><img class="fancybox center" src="/media/images/2014-01-11-mobile-design-details-hide-show-passwords-ios-implementation-and-thoughts/5.png" width="594" height="270"></p>

<p>This still doesn&rsquo;t remove the frustration of having to manually enter passwords on mobile.
It would be great to see Apple take the lead with iOS, and extend the iCloud Keychain /
Safari Password AutoFill (and generator) features to native apps.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Cloud Backend using Node.js on AWS]]></title>
    <link href="http://www.peterboni.net/blog/2013/12/07/a-cloud-backend-using-nodejs-on-aws/"/>
    <updated>2013-12-07T07:00:00+08:00</updated>
    <id>http://www.peterboni.net/blog/2013/12/07/a-cloud-backend-using-nodejs-on-aws</id>
    <content type="html"><![CDATA[<p>What?! You&rsquo;re building an awesome mobile app, like this one &ndash;
<a href="/blog/2013/06/29/ios-7-dynamic-type/">iOS 7 Dynamic Type</a>, and <a href="/blog/2013/06/24/ios-7-userxlistview/">iOS 7 UserXListView</a>,
and get to the point where you need a <em>backend</em>.
Oh no! Your complexity just increased exponentially.</p>

<p>Luckily the latest cloud computing XaaS (Everything as a service) is called a
<a href="http://en.wikipedia.org/wiki/Backend_as_a_service">BaaS</a> (Backend as a service).
BaaS offerings include <a href="https://parse.com">Parse</a> (which was acquired by Facebook earlier this year),
and the open source <a href="http://www.baasbox.com">BaasBox</a>.
The idea is that a BaaS abstracts the complexity of building a backend.</p>

<p>But is building a backend really all that difficult using cloud computing?
Let&rsquo;s find out &amp; build a cloud backend using <a href="http://nodejs.org">node.js</a> on <a href="http://aws.amazon.com">AWS</a>.
Let&rsquo;s get started.</p>

<!--more-->


<h2>Node.js</h2>

<p>First download &amp; install <a href="http://nodejs.org">Node.js</a>, which is a platform for building applications in JavaScript.
It&rsquo;s powered by the Google Chrome V8 JavaScript engine.</p>

<p>Isn&rsquo;t JavaScript slow? No!</p>

<blockquote><p>&ldquo;V8 compiles JavaScript source code directly into machine code when it is first executed.
There are no intermediate byte codes, no interpreter.&rdquo;, <a href="https://developers.google.com/v8/design">https://developers.google.com/v8/design</a></p></blockquote>

<p>Node.js is fast.</p>

<p>We&rsquo;re going to use Node.js &amp; node packages to expose web services for our awesome mobile app.</p>

<p>Why? There are lots of good articles that explain what Node.js is and what it&rsquo;s good for.
Here&rsquo;s my simple take:</p>

<ol>
<li>The web has changed from consumption (viewing web pages) to interaction (apps, social media, chat). We need better client/server technology.</li>
<li>Node.js is JavaScript on the server, which lowers the learning curve for developers.</li>
<li>Node.js has a strong open source community. NPM (Node Package Manager) is a repository
of reusable components. There are currently over 50 <em>thousand</em>, with over 3 <em>million</em> downloads per day.</li>
</ol>


<p>The goal is to build a cloud backend &ndash; expose a RESTful web API that supports OAuth 2.0, with a database.
This blog post should serve as the foundation to start you on that journey.</p>

<p>We will be using OS X Mavericks (Version 10.9), Terminal, and <a href="http://www.barebones.com/products/textwrangler/">TextWrangler</a>
which is available free from the App Store.</p>

<p>Create &amp; change to a new folder called <strong>cloudbackend</strong> from your Documents folder.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">peters-mac-mini:Documents peterboni$</span> mkdir cloudbackend
</span><span class='line'><span class="gp">peters-mac-mini:Documents peterboni$</span> <span class="nb">cd </span>cloudbackend/
</span><span class='line'><span class="gp">peters-mac-mini:cloudbackend peterboni$</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Create a file called <strong>package.json</strong> and put the following JSON data object in it.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">name</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;</span><span class="o">:</span> <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">cloudbackend</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;,</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">description</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;</span><span class="o">:</span> <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;,</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">version</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;</span><span class="o">:</span> <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="mf">0.0</span><span class="p">.</span><span class="mi">1</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;,</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="kr">private</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">scripts</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;</span><span class="o">:</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="s2">&quot;start&quot;</span><span class="o">:</span> <span class="s2">&quot;node app&quot;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">},</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">dependencies</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;</span><span class="o">:</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="s2">&quot;express&quot;</span><span class="o">:</span> <span class="s2">&quot;3.x&quot;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Use npm (Node Package Manager) to install <a href="http://expressjs.com">Express</a>, which is the
dependency you identified in the above package.json file. Express is a web
application framework. Enter &lsquo;npm install&rsquo;.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">peters-mac-mini:cloudbackend peterboni$</span> npm install
</span><span class='line'><span class="go">npm http GET &lt;a href=&quot;https://registry.npmjs.org/express&quot;&gt;https://registry.npmjs.org/express&lt;/a&gt;</span>
</span><span class='line'><span class="go">&amp;hellip;</span>
</span><span class='line'><span class="go">&lt;a href=&quot;&amp;#109;&amp;#x61;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#x65;&amp;#120;&amp;#112;&amp;#x72;&amp;#101;&amp;#115;&amp;#x73;&amp;#x40;&amp;#x33;&amp;#46;&amp;#x34;&amp;#46;&amp;#54;&quot;&gt;&amp;#x65;&amp;#120;&amp;#112;&amp;#x72;&amp;#101;&amp;#x73;&amp;#115;&amp;#64;&amp;#51;&amp;#x2e;&amp;#x34;&amp;#46;&amp;#54;&lt;/a&gt; node_modules/express</span>
</span><span class='line'><span class="go">├── &lt;a href=&quot;&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#x6d;&amp;#101;&amp;#116;&amp;#x68;&amp;#x6f;&amp;#x64;&amp;#x73;&amp;#64;&amp;#48;&amp;#x2e;&amp;#49;&amp;#46;&amp;#x30;&quot;&gt;&amp;#x6d;&amp;#x65;&amp;#x74;&amp;#104;&amp;#x6f;&amp;#x64;&amp;#115;&amp;#64;&amp;#x30;&amp;#46;&amp;#49;&amp;#x2e;&amp;#x30;&lt;/a&gt;</span>
</span><span class='line'><span class="go">&amp;hellip;</span>
</span><span class='line'><span class="go">└── &lt;a href=&quot;&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#116;&amp;#x6f;&amp;#x3a;&amp;#99;&amp;#x6f;&amp;#110;&amp;#110;&amp;#101;&amp;#99;&amp;#116;&amp;#x40;&amp;#x32;&amp;#46;&amp;#49;&amp;#49;&amp;#46;&amp;#x32;&quot;&gt;&amp;#99;&amp;#x6f;&amp;#x6e;&amp;#110;&amp;#101;&amp;#99;&amp;#116;&amp;#64;&amp;#x32;&amp;#x2e;&amp;#x31;&amp;#49;&amp;#x2e;&amp;#50;&lt;/a&gt; (uid2@0.0.3, pause@0.0.1, qs@0.6.5, bytes@0.2.1, raw-body@1.1.2, negotiator@0.3.0, &lt;a href=&quot;&amp;#109;&amp;#x61;&amp;#x69;&amp;#x6c;&amp;#116;&amp;#x6f;&amp;#x3a;&amp;#109;&amp;#117;&amp;#x6c;&amp;#x74;&amp;#x69;&amp;#112;&amp;#x61;&amp;#x72;&amp;#116;&amp;#121;&amp;#x40;&amp;#x32;&amp;#x2e;&amp;#x32;&amp;#x2e;&amp;#x30;&quot;&gt;&amp;#x6d;&amp;#117;&amp;#108;&amp;#x74;&amp;#x69;&amp;#x70;&amp;#97;&amp;#x72;&amp;#x74;&amp;#x79;&amp;#64;&amp;#50;&amp;#x2e;&amp;#50;&amp;#x2e;&amp;#x30;&lt;/a&gt;)</span>
</span><span class='line'><span class="gp">peters-mac-mini:cloudbackend peterboni$</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Create a file called <strong>app.js</strong> with the following content.
All we are doing here is exposing one HTTP GET method request, available at &lsquo;/test&rsquo;,
which returns a JSON data object. A simple test.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">express</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">express</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;),</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">http</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;http&#39;</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="kd">var</span> <span class="nx">app</span> <span class="o">=</span> <span class="nx">express</span><span class="p">();</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">app</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">port</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">PORT</span> <span class="o">||</span> <span class="mi">3000</span><span class="p">);</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="err">/test&amp;rsquo;, function(req, res) {</span>
</span><span class='line'>  <span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="p">({</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">message</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span><span class="o">:&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">hi</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;});</span>
</span><span class='line'><span class="p">});</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">http</span><span class="p">.</span><span class="nx">createServer</span><span class="p">(</span><span class="nx">app</span><span class="p">).</span><span class="nx">listen</span><span class="p">(</span><span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">port</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;),</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">Cloudbackend</span> <span class="nx">listening</span> <span class="nx">on</span> <span class="nx">port</span> <span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">port</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;));</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Let&rsquo;s test it!
Enter &lsquo;node app&rsquo;.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">peters-mac-mini:cloudbackend peterboni$</span> node app
</span><span class='line'><span class="go">Cloudbackend listening on port 3000</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Now open your favourite web browser, and navigate to <a href="http://localhost:3000/test">http://localhost:3000/test</a></p>

<p><img class="fancybox center" src="/media/images/2013-12-07-a-cloud-backend-using-nodejs-on-aws/1-node-app.png" width="914" height="468"></p>

<p>Congratulations! You&rsquo;ve just successfully built a RESTful web API with a single <em>resource</em>
called <em>test</em> which is responding to a HTTP GET method request, and is returning a
JSON data object.</p>

<p>Let&rsquo;s deploy our backend to the cloud.</p>

<h2>AWS</h2>

<p>With <a href="http://aws.amazon.com">AWS</a> (Amazon Web Services) we can easily deploy our backend to the cloud while
still keeping flexibility &amp; control &ndash; things that a BaaS takes away by abstracting the complexity.</p>

<p>First sign up for the very generous <a href="http://aws.amazon.com/free/">AWS Free Usage Tier</a>.
This simple tutorial should not result in charges to your account.</p>

<p>We are going to deploy <strong>cloudbackend</strong> as an Application into EB (<a href="http://aws.amazon.com/elasticbeanstalk/">Elastic Beanstalk</a>)
which is an AWS <em>Application Container</em>. The <a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.concepts.architecture.html">Architectural Overview</a> shows &amp;
explains what Elastic Beanstalk is.</p>

<ol>
<li>You deploy your application to EB and it gets a unique URL &ndash; <a href="http://myapp.elasticbeanstalk.com">http://myapp.elasticbeanstalk.com</a></li>
<li>An Auto Scaling Group is created with at least 1 <a href="http://aws.amazon.com/ec2/">EC2</a> Instance (basically a VM &ndash; Virtual Machine).</li>
<li>Traffic to your application URL first goes through the ELB (Elastic Load Balancer), and then to an EC2 Instance.</li>
</ol>


<p>Once setup all AWS resources are automatically provisioned &amp; configured.
You have a fully <strong>auto load balanced, auto scaled cloud application environment</strong>.</p>

<p>Next, download &amp; install <a href="http://git-scm.com/">Git</a>.</p>

<p>Initialise your <strong>cloudbackend</strong> Git repository. Enter &lsquo;git init&rsquo;, followed by
the other commands in the following console code block.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">peters-mac-mini:cloudbackend peterboni$</span> git init
</span><span class='line'><span class="go">Initialized empty Git repository in /Users/peterboni/Documents/cloudbackend/.git/</span>
</span><span class='line'><span class="gp">peters-mac-mini:cloudbackend peterboni$</span> cat &gt; .gitignore &amp;lt;&amp;lt;EOT
</span><span class='line'><span class="go">node_modules/</span>
</span><span class='line'><span class="go">.gitignore</span>
</span><span class='line'><span class="go">.elasticbeanstalk/</span>
</span><span class='line'><span class="go">EOT</span>
</span><span class='line'><span class="gp">peters-mac-mini:cloudbackend peterboni$</span> git add .
</span><span class='line'><span class="gp">peters-mac-mini:cloudbackend peterboni$</span> git commit -m &amp;ldquo;initial app&amp;rdquo;
</span><span class='line'><span class="go">[master (root-commit) 889e876] initial app</span>
</span><span class='line'><span class="go"> 2 files changed, 26 insertions(+)</span>
</span><span class='line'><span class="go"> create mode 100644 app.js</span>
</span><span class='line'><span class="go"> create mode 100644 package.json</span>
</span><span class='line'><span class="gp">peters-mac-mini:cloudbackend peterboni$</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Next download &amp; extract the <a href="http://aws.amazon.com/code/6752709412171743">AWS Elastic Beanstalk Command Line Tool</a> to
your Documents folder (the cloudbackend folder should be in your Documents folder).</p>

<p>Next add the appropriate EB Python folder to your PATH.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">peters-mac-mini:cloudbackend peterboni$</span> <span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:/Users/peterboni/Documents/AWS-ElasticBeanstalk-CLI-2.5.1/eb/macosx/python2.7/
</span><span class='line'><span class="gp">peters-mac-mini:cloudbackend peterboni$</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>If you have OS X Mavericks (Version 10.9) then you already have Python 2.7.5, else you
will need to download &amp; install it.</p>

<p>Next we&rsquo;re going to create &amp; configure the <strong>cloudbackend</strong> AWS Elastic Beanstalk
Application Container. You basically enter &lsquo;eb init&rsquo; and then follow the prompts.</p>

<ol>
<li>You will need to enter your AWS Access Key ID and Secret Access Key, which
can be found at the URL given after you enter &lsquo;eb init&rsquo;.</li>
<li>Select an AWS service region. I entered &lsquo;7&rsquo; for &lsquo;Asia Pacific (Sydney)&rsquo;.</li>
<li>Accept the default application &amp; environment names by pressing return.</li>
<li>Enter &lsquo;8&rsquo;, for &lsquo;64bit Amazon Linux 2013.09 running Node.js&rsquo;.</li>
<li>Enter &lsquo;1&rsquo;, for &lsquo;LoadBalanced&rsquo;.</li>
<li>Enter &lsquo;n&rsquo;, to skip creating an &lsquo;RDS DB Instance&rsquo;.</li>
<li>Enter &lsquo;1&rsquo;, for &lsquo;Create a default instance profile&rsquo;.</li>
</ol>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">peters-mac-mini:cloudbackend peterboni$</span> eb init
</span><span class='line'><span class="go">To get your AWS Access Key ID and Secret Access Key,</span>
</span><span class='line'><span class="go">  visit &amp;ldquo;&lt;a href=&quot;https://aws-portal.amazon.com/gp/aws/securityCredentials&quot;&gt;https://aws-portal.amazon.com/gp/aws/securityCredentials&lt;/a&gt;&amp;rdquo;.</span>
</span><span class='line'><span class="go">Enter your AWS Access Key ID (current value is &amp;ldquo;AKIAJ&lt;strong&gt;&lt;strong&gt;&lt;em&gt;GBOHQ&amp;rdquo;): [enter yours here]</span>
</span><span class='line'><span class="go">Enter your AWS Secret Access Key (current value is &amp;ldquo;MhYxu&lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;rJfZx&amp;rdquo;): [enter yours here]</span>
</span><span class='line'><span class="go">Select an AWS Elastic Beanstalk service region.</span>
</span><span class='line'><span class="go">Available service regions are:</span>
</span><span class='line'><span class="go">1) US East (Virginia)</span>
</span><span class='line'><span class="go">2) US West (Oregon)</span>
</span><span class='line'><span class="go">3) US West (North California)</span>
</span><span class='line'><span class="go">4) EU West (Ireland)</span>
</span><span class='line'><span class="go">5) Asia Pacific (Singapore)</span>
</span><span class='line'><span class="go">6) Asia Pacific (Tokyo)</span>
</span><span class='line'><span class="go">7) Asia Pacific (Sydney)</span>
</span><span class='line'><span class="go">8) South America (Sao Paulo)</span>
</span><span class='line'><span class="go">Select (1 to 8): 7</span>
</span><span class='line'><span class="go">Enter an AWS Elastic Beanstalk application name (auto-generated value is &amp;ldquo;cloudbackend&amp;rdquo;):</span>
</span><span class='line'><span class="go">Enter an AWS Elastic Beanstalk environment name (auto-generated value is &amp;ldquo;cloudbackend-env&amp;rdquo;):</span>
</span><span class='line'><span class="go">Select a solution stack.</span>
</span><span class='line'><span class="go">Available solution stacks are:</span>
</span><span class='line'><span class="go">1) 32bit Amazon Linux 2013.09 running PHP 5.4</span>
</span><span class='line'><span class="go">2) 64bit Amazon Linux 2013.09 running PHP 5.4</span>
</span><span class='line'><span class="go">3) 32bit Amazon Linux 2013.09 running PHP 5.5</span>
</span><span class='line'><span class="go">4) 64bit Amazon Linux 2013.09 running PHP 5.5</span>
</span><span class='line'><span class="go">5) 32bit Amazon Linux running PHP 5.3</span>
</span><span class='line'><span class="go">6) 64bit Amazon Linux running PHP 5.3</span>
</span><span class='line'><span class="go">7) 32bit Amazon Linux 2013.09 running Node.js</span>
</span><span class='line'><span class="go">8) 64bit Amazon Linux 2013.09 running Node.js</span>
</span><span class='line'><span class="go">&amp;hellip;</span>
</span><span class='line'><span class="go">Select (1 to 28): 8</span>
</span><span class='line'><span class="go">Select an environment type.</span>
</span><span class='line'><span class="go">Available environment types are:</span>
</span><span class='line'><span class="go">1) LoadBalanced</span>
</span><span class='line'><span class="go">2) SingleInstance</span>
</span><span class='line'><span class="go">Select (1 to 2): 1</span>
</span><span class='line'><span class="go">Create an RDS DB Instance? [y/n]: n</span>
</span><span class='line'><span class="go">Attach an instance profile (current value is &amp;ldquo;[Create a default instance profile]&amp;rdquo;):</span>
</span><span class='line'><span class="go">1) [Create a default instance profile]</span>
</span><span class='line'><span class="go">2) aws-elasticbeanstalk-ec2-role</span>
</span><span class='line'><span class="go">3) [Other instance profile]</span>
</span><span class='line'><span class="go">Select (1 to 3): 1</span>
</span><span class='line'><span class="go">Updated AWS Credential file at &amp;ldquo;/Users/peterboni/.elasticbeanstalk/aws_credential_file&amp;rdquo;.&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="go">&lt;p&gt;peters-mac-mini:cloudbackend peterboni$</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Now we just start it. Be patient as this will take a few minutes.</p>

<ol>
<li>Enter &lsquo;eb start&rsquo;.</li>
<li>Enter &lsquo;y&rsquo;, to &lsquo;deploy the latest Git commit to your environment&rsquo;.</li>
</ol>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">peters-mac-mini:cloudbackend peterboni$</span> eb start
</span><span class='line'><span class="go">Starting application &amp;ldquo;cloudbackend&amp;rdquo;.</span>
</span><span class='line'><span class="go">Would you like to deploy the latest Git commit to your environment? [y/n]: y</span>
</span><span class='line'><span class="go">remote:</span>
</span><span class='line'><span class="go">remote: error: Unable to deploy application version: No Environment found for EnvironmentName = &amp;lsquo;cloudbackend-env&amp;rsquo;.</span>
</span><span class='line'><span class="go">remote:</span>
</span><span class='line'><span class="go">To &lt;a href=&quot;https://...:...@git.elasticbeanstalk.ap-southeast-2.amazonaws.com/v1/repos/.../commitid/.../environment/...&quot;&gt;https://...:...@git.elasticbeanstalk.ap-southeast-2.amazonaws.com/v1/repos/.../commitid/.../environment/...&lt;/a&gt;</span>
</span><span class='line'><span class="go"> * [new branch]      HEAD &amp;ndash;&gt; master&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="go">&lt;p&gt;Waiting for environment &amp;ldquo;cloudbackend-env&amp;rdquo; to launch.</span>
</span><span class='line'><span class="go">2013-12-07 08:21:09 INFO    createEnvironment is starting.</span>
</span><span class='line'><span class="go">2013-12-07 08:21:14 INFO    Using elasticbeanstalk-ap-southeast-2-558573496878 as Amazon S3 storage bucket for environment data.</span>
</span><span class='line'><span class="go">2013-12-07 08:21:46 INFO    Created load balancer named: awseb-e-i-AWSEBLoa-SNLC5NAHWZWP</span>
</span><span class='line'><span class="go">2013-12-07 08:22:06 INFO    Created security group named: awseb-e-ib22smbwaz-stack-AWSEBSecurityGroup-1DE3TWOH4AYLK</span>
</span><span class='line'><span class="go">2013-12-07 08:22:10 INFO    Created Auto Scaling launch configuration named: awseb-e-ib22smbwaz-stack-AWSEBAutoScalingLaunchConfiguration-1NPGUDUWIC5YP</span>
</span><span class='line'><span class="go">2013-12-07 08:23:07 INFO    Waiting for EC2 instances to launch. This may take a few minutes.</span>
</span><span class='line'><span class="go">2013-12-07 08:23:07 INFO    Created Auto Scaling group named: awseb-e-ib22smbwaz-stack-AWSEBAutoScalingGroup-1BTN5S4LQA5BD</span>
</span><span class='line'><span class="go">2013-12-07 08:23:10 INFO    Created Auto Scaling group policy named: arn:aws:autoscaling:ap-southeast-2:558573496878:scalingPolicy:5c8b171d-262b-4286-8bbd-76ff9db15845:autoScalingGroupName/awseb-e-ib22smbwaz-stack-AWSEBAutoScalingGroup-1BTN5S4LQA5BD:policyName/awseb-e-ib22smbwaz-stack-AWSEBAutoScalingScaleDownPolicy-18LWCZMRA7I4G</span>
</span><span class='line'><span class="go">2013-12-07 08:23:11 INFO    Created Auto Scaling group policy named: arn:aws:autoscaling:ap-southeast-2:558573496878:scalingPolicy:d9a9f3df-b813-4ffe-9556-f2a7136aa69d:autoScalingGroupName/awseb-e-ib22smbwaz-stack-AWSEBAutoScalingGroup-1BTN5S4LQA5BD:policyName/awseb-e-ib22smbwaz-stack-AWSEBAutoScalingScaleUpPolicy-ZSDGPZ6KHCRQ</span>
</span><span class='line'><span class="go">2013-12-07 08:23:14 INFO    Created CloudWatch alarm named: awseb-e-ib22smbwaz-stack-AWSEBCloudwatchAlarmHigh-1AAZW8L054YWY</span>
</span><span class='line'><span class="go">2013-12-07 08:23:14 INFO    Created CloudWatch alarm named: awseb-e-ib22smbwaz-stack-AWSEBCloudwatchAlarmLow-1OAGDWAQFGJTO</span>
</span><span class='line'><span class="go">2013-12-07 08:27:02 INFO    Successfully launched environment: cloudbackend-env</span>
</span><span class='line'><span class="go">Application is available at &amp;ldquo;cloudbackend-env-yey9npuvjz.elasticbeanstalk.com&amp;rdquo;.</span>
</span><span class='line'><span class="gp">peters-mac-mini:cloudbackend peterboni$</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Let&rsquo;s test it!</p>

<p>Open your favourite web browser, and navigate to <a href="http://cloudbackend-env-yey9npuvjz.elasticbeanstalk.com/test">http://cloudbackend-env-yey9npuvjz.elasticbeanstalk.com/test</a></p>

<blockquote><p>Replace the domain part of the above URL with the domain you were given at the end of the &lsquo;eb start&rsquo; process &hellip;
Application is available at &ldquo;cloudbackend-env-*.elasticbeanstalk.com&rdquo;.</p></blockquote>

<p><img class="fancybox center" src="/media/images/2013-12-07-a-cloud-backend-using-nodejs-on-aws/2-node-app.png" width="1138" height="714"></p>

<p><strong>Congratulations! Your cloud backend is now working.</strong></p>

<p>Now to work on that awesome mobile app!</p>

<p>Lastly if you want to stop &amp; delete the environment, use the following EB command.
Enter &lsquo;eb stop&rsquo;, and then &lsquo;y&rsquo; to terminate the environment.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">peters-mac-mini:cloudbackend peterboni$</span> eb stop
</span><span class='line'><span class="go">Terminate environment? [y/n]: y</span>
</span><span class='line'><span class="go">Stopping environment &amp;ldquo;cloudbackend-env&amp;rdquo;. This may take a few minutes.</span>
</span><span class='line'><span class="go">2013-12-07 09:24:44 INFO    terminateEnvironment is starting.</span>
</span><span class='line'><span class="go">2013-12-07 09:24:57 INFO    Deleted CloudWatch alarm named: awseb-e-ib22smbwaz-stack-AWSEBCloudwatchAlarmLow-1OAGDWAQFGJTO</span>
</span><span class='line'><span class="go">2013-12-07 09:24:57 INFO    Deleted CloudWatch alarm named: awseb-e-ib22smbwaz-stack-AWSEBCloudwatchAlarmHigh-1AAZW8L054YWY</span>
</span><span class='line'><span class="go">2013-12-07 09:25:00 INFO    Deleted Auto Scaling group policy named: arn:aws:autoscaling:ap-southeast-2:558573496878:scalingPolicy:d9a9f3df-b813-4ffe-9556-f2a7136aa69d:autoScalingGroupName/awseb-e-ib22smbwaz-stack-AWSEBAutoScalingGroup-1BTN5S4LQA5BD:policyName/awseb-e-ib22smbwaz-stack-AWSEBAutoScalingScaleUpPolicy-ZSDGPZ6KHCRQ</span>
</span><span class='line'><span class="go">2013-12-07 09:25:00 INFO    Deleted Auto Scaling group policy named: arn:aws:autoscaling:ap-southeast-2:558573496878:scalingPolicy:5c8b171d-262b-4286-8bbd-76ff9db15845:autoScalingGroupName/awseb-e-ib22smbwaz-stack-AWSEBAutoScalingGroup-1BTN5S4LQA5BD:policyName/awseb-e-ib22smbwaz-stack-AWSEBAutoScalingScaleDownPolicy-18LWCZMRA7I4G</span>
</span><span class='line'><span class="go">2013-12-07 09:25:03 INFO    Waiting for EC2 instances to terminate. This may take a few minutes.</span>
</span><span class='line'><span class="go">2013-12-07 09:26:15 INFO    Deleted Auto Scaling group named: awseb-e-ib22smbwaz-stack-AWSEBAutoScalingGroup-1BTN5S4LQA5BD</span>
</span><span class='line'><span class="go">2013-12-07 09:26:19 INFO    Deleted Auto Scaling launch configuration named: awseb-e-ib22smbwaz-stack-AWSEBAutoScalingLaunchConfiguration-1NPGUDUWIC5YP</span>
</span><span class='line'><span class="go">2013-12-07 09:26:22 INFO    Deleted security group named: awseb-e-ib22smbwaz-stack-AWSEBSecurityGroup-1DE3TWOH4AYLK</span>
</span><span class='line'><span class="go">2013-12-07 09:26:25 INFO    Deleted load balancer named: awseb-e-i-AWSEBLoa-SNLC5NAHWZWP</span>
</span><span class='line'><span class="go">2013-12-07 09:26:28 INFO    Deleting SNS topic for environment cloudbackend-env.</span>
</span><span class='line'><span class="go">Stop of environment &amp;ldquo;cloudbackend-env&amp;rdquo; has completed.</span>
</span><span class='line'><span class="gp">peters-mac-mini:cloudbackend peterboni$</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>If you get stuck, you can always try checking out the Amazon documentation &ndash;
<a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create_deploy_nodejs_express.html">Deploying an Express Application to AWS Elastic Beanstalk</a>.</p>

<p>I may cover topics like adding a custom domain name, SSL, OAuth 2.0 support, a
database, or web pages to your cloud backend in future posts if there is interest.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS Formatted Currency Input]]></title>
    <link href="http://www.peterboni.net/blog/2013/07/04/ios-formatted-currency-input/"/>
    <updated>2013-07-04T07:00:00+08:00</updated>
    <id>http://www.peterboni.net/blog/2013/07/04/ios-formatted-currency-input</id>
    <content type="html"><![CDATA[<p>You&rsquo;re building an iOS app, and need the user to enter a money value. You start by using
a UITextField. If you want a basic user experience, then you&rsquo;re done.</p>

<p>If you want to give the user <em>something better</em>, then the pain begins. The pain is worth
it because <strong>small details matter</strong>. I&rsquo;ve taken ideas from a few places &amp; combined them
into this experience &amp; open source code.</p>

<!--more-->


<h2>The Experience in 9 images</h2>

<p>1. We start &amp; sit there, begging the user to enter something. We&rsquo;re showing $0.00, so we have
sent a signal to them that they are entering a money value. The cursor is flashing at them
after the last 0 at the end of the formatted money value.</p>

<p><img class="fancybox center" src="/media/images/2013-07-04-ios-formatted-currency-input/1.png" width="396" height="744" title="Start, Shows $0.00" ></p>

<p>2. The user taps the 1 key on the number pad. The display value changes to $0.01</p>

<p><img class="fancybox center" src="/media/images/2013-07-04-ios-formatted-currency-input/2.png" width="396" height="744" title="Tap 1, Changes to $0.01" ></p>

<p>3. The user taps the 2 key on the number pad. The display value changes to $0.12</p>

<p><img class="fancybox center" src="/media/images/2013-07-04-ios-formatted-currency-input/3.png" width="396" height="744" title="Tap 2, Changes to $0.12" ></p>

<p>4. The user taps the 3 key on the number pad. The display value changes to $1.23</p>

<p>They haven&rsquo;t had to enter in a dot. They are just tapping numbers, and the displayed
money value is formatting itself in front of their eyes.</p>

<p><img class="fancybox center" src="/media/images/2013-07-04-ios-formatted-currency-input/4.png" width="396" height="744" title="Tap 3, Changes to $1.23" ></p>

<p>5. The user taps some more numbers &ndash; 4, 5, and then 6. The display value changes to $1,234.56</p>

<p>We have a comma! The money value is formatted.</p>

<p><img class="fancybox center" src="/media/images/2013-07-04-ios-formatted-currency-input/5.png" width="396" height="744" title="Tap 4, 5, 6, Changes to $1,234.56" ></p>

<p>6. The user taps Delete. The display value changes to $123.45</p>

<p><img class="fancybox center" src="/media/images/2013-07-04-ios-formatted-currency-input/6.png" width="396" height="744" title="Tap Delete, Deletes 6" ></p>

<p>7. The user moves the cursor to after 1, taps Delete. The display value changes to $23.45</p>

<p><img class="fancybox center" src="/media/images/2013-07-04-ios-formatted-currency-input/7.png" width="396" height="744" title="Move cursor to after 1, and Tap Delete, Deletes 1" ></p>

<p>8. From start the user gets ready to paste in &lsquo;$1,000&rsquo; (without quotes) from somewhere else.</p>

<p><img class="fancybox center" src="/media/images/2013-07-04-ios-formatted-currency-input/8.png" width="396" height="744" title="From Start, Get ready to Paste $1,000" ></p>

<p>9. The &lsquo;$1,000&rsquo; gets pasted in &amp; the display value changes to $1,000.00.</p>

<p>Note that the display value didn&rsquo;t change to $10.00, which would have happened if we
didn&rsquo;t trap the paste and format the value before updating the display value.</p>

<p>Also note that the user could also paste in &lsquo;1000&rsquo; or &lsquo;$1000&rsquo;.</p>

<p><img class="fancybox center" src="/media/images/2013-07-04-ios-formatted-currency-input/9.png" width="396" height="744" title="Paste in $1,000, Changes to $1,000.00" ></p>

<h2>The Code</h2>

<p>Go get it &ndash; <a href="https://github.com/peterboni/FormattedCurrencyInput">FormattedCurrencyInput on GitHub</a>.<br/>
Fork it, or submit a Pull Request, and let&rsquo;s make it better for others together!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS 7 Dynamic Type]]></title>
    <link href="http://www.peterboni.net/blog/2013/06/29/ios-7-dynamic-type/"/>
    <updated>2013-06-29T07:00:00+08:00</updated>
    <id>http://www.peterboni.net/blog/2013/06/29/ios-7-dynamic-type</id>
    <content type="html"><![CDATA[<p>iOS 7 introduces Dynamic Type, which if apps choose to support it, gives the user
control over text size in an app. Web pages have had this feature for free since the early
days of the web, but web browsers moved away from dynamic text sizing.
<a href="http://www.codinghorror.com/blog/2009/01/the-two-types-of-browser-zoom.html">The Two Types of Browser Zoom</a>.</p>

<p>iOS7 Dynamic Type automatically adjusts weight, letter spacing, and line height for every font
size. It looks <strong>stunning</strong>, but there&rsquo;s work to make your app support it.</p>

<!--more-->


<h2>Default Size</h2>

<p>Here&rsquo;s what <a href="/blog/2013/06/24/ios-7-userxlistview/">UserXListView</a> looks like with the Text Size
(Settings &ndash; General &ndash; Text Size) set to the default size in the <em>iPhone Retina (3.5-inch)</em>
iOS Simulator.</p>

<p><img class="fancybox center" src="/media/images/2013-06-29-ios-7-dynamic-type/1-text-size-normal.png" width="500" height="713" title="Text Size Default" ></p>

<p>We get 3 &amp; &lsquo;a bit&rsquo; cells in the UITableView.</p>

<p><img class="fancybox center" src="/media/images/2013-06-29-ios-7-dynamic-type/2-userxlistview-normal.png" width="500" height="713" title="UserXListView Default" ></p>

<h2>Smallest Size</h2>

<p>Changing the Text Size to the smallest size means we can fit slightly more.</p>

<p><img class="fancybox center" src="/media/images/2013-06-29-ios-7-dynamic-type/3-text-size-small.png" width="500" height="713" title="Text Size Smallest" ></p>

<p>Nearly 4 cells in the UITableView.</p>

<p><img class="fancybox center" src="/media/images/2013-06-29-ios-7-dynamic-type/4-userxlistview-small.png" width="500" height="713" title="UserXListView Smallest" ></p>

<h2>Largest Size</h2>

<p>Changing the Text Size to the largest size means we can fit slightly less, but get big
beautiful type.</p>

<p><img class="fancybox center" src="/media/images/2013-06-29-ios-7-dynamic-type/5-text-size-large.png" width="500" height="713" title="Text Size Largest" ></p>

<p>3 cells in the UITableView.</p>

<p><img class="fancybox center" src="/media/images/2013-06-29-ios-7-dynamic-type/6-userxlistview-large.png" width="500" height="713" title="UserXListView Largest" ></p>

<h2>Implementation, The Easy Part</h2>

<p>That&rsquo;s how it looks, but how hard is it to make your app support it. Let&rsquo;s look at
<a href="/blog/2013/06/24/ios-7-userxlistview/">UserXListView</a>. The cell layout makes use of Auto
Layout Constraints, which are very powerful.</p>

<p><img class="fancybox center" src="/media/images/2013-06-29-ios-7-dynamic-type/7-userxlistview-cell-layout.png" width="381" height="674" title="UserXListView Cell Layout" ></p>

<p>iOS 7 has defined Text Styles &ndash; Body, Caption 1, Caption 2, Footnote, Headline 1,
Headline 2, Subhead 1, and Subhead 2. We assign a Text Style to each label in the cell
layout via the attribute inspector as shown below.</p>

<p><img class="fancybox center" src="/media/images/2013-06-29-ios-7-dynamic-type/8-userxlistview-cell-label-attribute-inspector.png" width="316" height="196" title="UserXListView Cell Label Attribute Inspector" ></p>

<p>Once the label Text Styles &amp; Auto Layout Constraints are set, we&rsquo;re ready for the hard
part.</p>

<h2>Implementation, The Hard Part</h2>

<p>Unlike Auto Layout in this example, there&rsquo;s more work to do to support
Dynamic Type.</p>

<p>We need to make the Controller aware of a Text Size change by hooking into the
UIContentSizeCategoryDidChangeNotification.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">viewDidLoad</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'><span class="p">[[</span><span class="n">NSNotificationCenter</span> <span class="n">defaultCenter</span><span class="p">]</span> <span class="nl">addObserver:</span><span class="n">self</span> <span class="nl">selector:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">preferredContentSizeChanged:</span><span class="p">)</span> <span class="nl">name:</span><span class="n">UIContentSizeCategoryDidChangeNotification</span> <span class="nl">object:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">preferredContentSizeChanged:</span><span class="p">(</span><span class="n">NSNotification</span> <span class="o">*</span><span class="p">)</span><span class="n">aNotification</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// adjust the layout of the cells</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="n">setNeedsLayout</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="c1">// refresh view&amp;hellip;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p></li>
</ul>


<p>We need to calculate the height of the row/cell based on it&rsquo;s content, and as each label
in the cell can change height we need to calculate the total height of the cell required.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="p">(</span><span class="n">CGFloat</span><span class="p">)</span><span class="nl">tableView:</span><span class="p">(</span><span class="n">UITableView</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="n">tableView</span> <span class="nl">heightForRowAtIndexPath:</span><span class="p">(</span><span class="n">NSIndexPath</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="n">indexPath</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">Account</span> <span class="o">*</span><span class="n">account</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">fetchedResultsController</span> <span class="nl">objectAtIndexPath:</span><span class="n">indexPath</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">UIFont</span> <span class="o">*</span><span class="n">nameLabelFont</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIFont</span> <span class="nl">preferredFontForTextStyle:</span><span class="n">UIFontTextStyleHeadline1</span><span class="p">];</span>
</span><span class='line'><span class="n">CGSize</span> <span class="n">nameLabelFontSize</span> <span class="o">=</span> <span class="p">[[</span><span class="n">account</span> <span class="n">name</span><span class="p">]</span> <span class="nl">sizeWithAttributes:</span><span class="p">[</span><span class="n">NSDictionary</span> <span class="nl">dictionaryWithObject:</span><span class="n">nameLabelFont</span> <span class="nl">forKey:</span><span class="n">NSFontAttributeName</span><span class="p">]];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// ...</span>
</span><span class='line'>
</span><span class='line'><span class="n">CGFloat</span> <span class="n">PADDING_OUTER</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
</span><span class='line'><span class="n">CGFloat</span> <span class="n">totalHeight</span> <span class="o">=</span> <span class="n">PADDING_OUTER</span> <span class="o">+</span> <span class="n">nameLabelFontSize</span><span class="p">.</span><span class="n">height</span> <span class="o">+</span> <span class="p">...</span> <span class="o">+</span> <span class="n">PADDING_OUTER</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">return</span> <span class="n">totalHeight</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>We also need to programmatically assign (or re-assign because we already did it in
the Storyboard) the cell label Text Style values.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="p">(</span><span class="n">UITableViewCell</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="nl">tableView:</span><span class="p">(</span><span class="n">UITableView</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="n">tableView</span> <span class="nl">cellForRowAtIndexPath:</span><span class="p">(</span><span class="n">NSIndexPath</span> <span class="o">*</span><span class="p">)</span><span class="n">indexPath</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">AccountCell</span> <span class="o">*</span><span class="n">cell</span> <span class="o">=</span> <span class="p">(</span><span class="n">AccountCell</span> <span class="o">*</span><span class="p">)[</span><span class="n">tableView</span> <span class="nl">dequeueReusableCellWithIdentifier:</span><span class="s">@&quot;AccountCell&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">Account</span> <span class="o">*</span><span class="n">account</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">fetchedResultsController</span> <span class="nl">objectAtIndexPath:</span><span class="n">indexPath</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">cell</span><span class="p">.</span><span class="n">nameLabel</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="p">[</span><span class="n">account</span> <span class="n">name</span><span class="p">];</span>
</span><span class='line'><span class="n">cell</span><span class="p">.</span><span class="n">nameLabel</span><span class="p">.</span><span class="n">font</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIFont</span> <span class="nl">preferredFontForTextStyle:</span><span class="n">UIFontTextStyleHeadline1</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// ...</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Final Thoughts</h2>

<p>That&rsquo;s it. iOS 7 determines &amp; applies the font attributes for each label based on the
Text Style for each label, and the iOS 7 Text Size system setting selected by the user,
and it&rsquo;s left to us (the developer) to cater for the changes in the layout to the view.</p>

<p>As you can see there&rsquo;s a bit of extra work to support Dynamic Type. It would be nice if
it was a bit smarter, a bit more automatic, but with great power comes great responsibility.</p>
]]></content>
  </entry>
  
</feed>
