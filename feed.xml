<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.7">Jekyll</generator><link href="https://www.peterboni.net/feed.xml" rel="self" type="application/atom+xml" /><link href="https://www.peterboni.net/" rel="alternate" type="text/html" /><updated>2020-08-08T15:16:35+08:00</updated><id>https://www.peterboni.net/feed.xml</id><title type="html">Peter Boni</title><subtitle>Trying to not take myself too seriously.</subtitle><author><name>Peter Boni</name></author><entry><title type="html">App to API Connection Trust</title><link href="https://www.peterboni.net/blog/2019/09/01/app-to-api-connection-trust/" rel="alternate" type="text/html" title="App to API Connection Trust" /><published>2019-09-01T07:00:00+08:00</published><updated>2019-09-01T07:00:00+08:00</updated><id>https://www.peterboni.net/blog/2019/09/01/app-to-api-connection-trust</id><content type="html" xml:base="https://www.peterboni.net/blog/2019/09/01/app-to-api-connection-trust/">&lt;h1 id=&quot;update-august-08-2020&quot;&gt;Update August 08, 2020&lt;/h1&gt;

&lt;p&gt;With the advent of iOS 14.0 there is a better way to do this now, check out &lt;a href=&quot;https://developer.apple.com/documentation/devicecheck&quot;&gt;App Attest&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;why&quot;&gt;Why&lt;/h1&gt;

&lt;p&gt;I’ve been sporadically building a mobile app as a side project.
For years. Yes, years.
I’ve been building it for a few reasons.
One of them is that it’s a way to escape and relax.
Another is that it’s a way to stay curious and keep learning.
The rest of the reasons and the mobile app however is a post for another time.
Let’s get to &lt;em&gt;this&lt;/em&gt; post.&lt;/p&gt;

&lt;p&gt;As part of building the mobile app I needed to retrieve weather data for the users current location.
A design decision I made is that the mobile app is fully native to the iOS platform and Apple ecosystem.
Therefore one constraint is that I didn’t want to introduce a separate identity system that would have impacted the user experience, and also meant I had to deal with the corresponding security concerns.
I wanted a way to retrieve the weather data in the most &lt;em&gt;trusted&lt;/em&gt; way possible - to respect the user, their data (current location), and hence their privacy.&lt;/p&gt;

&lt;h1 id=&quot;solution&quot;&gt;Solution&lt;/h1&gt;

&lt;p&gt;Here’s the solution that I designed and built with full credit to &lt;a href=&quot;https://twitter.com/graefoster&quot;&gt;Graeme Foster&lt;/a&gt;
for giving me the concept for the critical part - &lt;em&gt;how&lt;/em&gt; to secure the app to the API.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;mx-auto d-block&quot; src=&quot;/img/2019-09-01-app-to-api-connection-trust/concept.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The solution is as follows:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Part 1: &lt;strong&gt;HTTPS and MSTA&lt;/strong&gt;: When calling the API from the app implement SSL/TLS (no brainer), but more importantly MSTA (Manual Server Trust Authentication), i.e. SSL Pinning, to prevent MITM (Man In The Middle) attacks. Don’t you love acronyms!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Part 2: &lt;strong&gt;Secure App to API&lt;/strong&gt;: When calling the API from the app implement a trusted connection - this involves the app ‘registering’ with the API and being given a SecretKey via a trusted secure channel, that it uses on subsequent API calls. See &lt;a href=&quot;https://developer.apple.com/library/archive/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/APNSOverview.html&quot;&gt;APNs (Apple Push Notification service)&lt;/a&gt; which I use for this, and explain in more detail below.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;APNs delivery of remote notifications comes with some pretty heavy disclaimers in the Apple documentation linked to above, but I still decided to use it to implement the second part of the connection trust because:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;The pattern only relies on using the remote notification occasionally, i.e. when the device token changes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The app feature is optional - it reduces the user experience slightly, but it doesn’t really matter if it doesn’t work. For example, the user could decide to not give the app notification permission.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It’s an Apple built and operated method to deliver data to an app on a device via a trusted secure channel.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The following two sections go into detail on how to implement the two parts of the solution.&lt;/p&gt;

&lt;p&gt;Note that only &lt;strong&gt;simplified non-production code snippets&lt;/strong&gt; are shown for brevity. This is not industrialised and tested code.&lt;/p&gt;

&lt;h1 id=&quot;msta-manual-server-trust-authentication&quot;&gt;MSTA (Manual Server Trust Authentication)&lt;/h1&gt;

&lt;p&gt;MSTA is pretty simple when calling APIs using the standard Foundation &lt;code class=&quot;highlighter-rouge&quot;&gt;URLSession&lt;/code&gt; request. It may be easier with a third party library, but I prefer to minimise use of dependencies.&lt;/p&gt;

&lt;p&gt;See the Apple documentation &lt;a href=&quot;https://developer.apple.com/documentation/foundation/url_loading_system/handling_an_authentication_challenge/performing_manual_server_trust_authentication&quot;&gt;Performing Manual Server Trust Authentication&lt;/a&gt; which clearly documents when and how you can perform MSTA for this scenario.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You want to reject credentials that would otherwise be accepted by the system. For example, you want to “pin” your app to a set of specific keys or certificates under your control, rather than accept any valid credential.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here is a Swift code snippet that performs the MSTA. It has the API host hard-coded to 192.168.0.7, i.e. the API is local.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Certificates&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;localhost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Certificates&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;certificate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;localhost&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;certificate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SecCertificate&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;filePath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bundle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;forResource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;ofType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;der&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;try!&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;contentsOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;fileURLWithPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;certificate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SecCertificateCreateWithData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CFData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;certificate&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;APIHelper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URLSessionDelegate&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;urlSession&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URLSession&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;didReceive&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;challenge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URLAuthenticationChallenge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;nv&quot;&gt;completionHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;@escaping&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;URLSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;AuthChallengeDisposition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URLCredential&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;protectionSpace&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;challenge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;protectionSpace&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// 1&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;protectionSpace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;authenticationMethod&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;NSURLAuthenticationMethodServerTrust&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;protectionSpace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;192.168.0.7&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nf&quot;&gt;completionHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;performDefaultHandling&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// 2&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;serverTrust&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;protectionSpace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serverTrust&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;completionHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;performDefaultHandling&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// 3&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;checkValidity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serverTrust&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;credential&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URLCredential&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;trust&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serverTrust&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;completionHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;useCredential&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;credential&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;completionHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cancelAuthenticationChallenge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;checkValidity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SecTrust&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;bundleCert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Certificates&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;localhost&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;serverCert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SecTrustGetCertificateAtIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;bundleCertData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SecCertificateCopyData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bundleCert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSData&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;serverCertData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SecCertificateCopyData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serverCert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSData&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serverCertData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;isEqual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundleCertData&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And here is an explainer of what’s happening in the code snippet:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;The challenge type is server trust, and not some other kind of challenge. The challenge’s host name matches the host that you want to perform manual credential evaluation for.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Attempt to get the serverTrust property from the protection space. Fall back to default handling if the property is nil.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Pass the server trust to a private helper method checkValidity(of:) that compares the certificate in the server trust to known-good values stored in the app bundle.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I also found the following tutorial &lt;a href=&quot;https://www.raywenderlich.com/1484288-preventing-man-in-the-middle-attacks-in-ios-with-ssl-pinning&quot;&gt;Preventing Man-in-the-Middle Attacks in iOS with SSL Pinning&lt;/a&gt; useful to understand how to retrieve the certificate from the API server and add it to the Xcode project.&lt;/p&gt;

&lt;p&gt;The following terminal snippet copies the certificate output to openssl x509, specifies DER encoding and outputs it to a new file named &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost.der&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openssl s_client &lt;span class=&quot;nt&quot;&gt;-connect&lt;/span&gt; 192.168.0.7:5001 &amp;lt;/dev/null &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    | openssl x509 &lt;span class=&quot;nt&quot;&gt;-outform&lt;/span&gt; DER &lt;span class=&quot;nt&quot;&gt;-out&lt;/span&gt; localhost.der&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;secure-app-to-api&quot;&gt;Secure App to API&lt;/h1&gt;

&lt;p&gt;After I implemented MSTA, it was time to build the second part of the solution.
Here’s a sequence diagram showing detail of the interactions of the components.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;mx-auto d-block&quot; src=&quot;/img/2019-09-01-app-to-api-connection-trust/sequence.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The following sections show code snippets for how I implemented the main steps in the register process, and then finally authenticating the device/app on subsequent API calls.&lt;/p&gt;

&lt;h2 id=&quot;register---app-request&quot;&gt;Register - App: Request&lt;/h2&gt;

&lt;p&gt;The first step is to register the device with the API. You do this from the &lt;code class=&quot;highlighter-rouge&quot;&gt;didRegisterForRemoteNotificationsWithDeviceToken&lt;/code&gt; method in &lt;code class=&quot;highlighter-rouge&quot;&gt;AppDelegate.swift&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;didRegisterForRemoteNotificationsWithDeviceToken&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;deviceToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;deviceTokenEncoded&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deviceToken&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;hexEncodedString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;APIHelper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;deviceToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deviceTokenEncoded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here’s how you turn the &lt;code class=&quot;highlighter-rouge&quot;&gt;deviceToken&lt;/code&gt; as &lt;code class=&quot;highlighter-rouge&quot;&gt;Data&lt;/code&gt; into an API friendly hex string as an extension.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;kd&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;HexEncodingOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;OptionSet&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;rawValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;upperCase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;HexEncodingOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;rawValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hexEncodedString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;HexEncodingOptions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;format&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;upperCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;%02hhX&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;%02hhx&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;joined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;register---api-create-secret-key-for-token-send-push-notification&quot;&gt;Register - API: Create Secret Key for Token, Send Push Notification&lt;/h2&gt;

&lt;p&gt;The next step in the register process is to create the SecretKey from the Token, and send the push notification. I chose to build the API as an AWS Lambda ASP.NET Core Web API project, and use AWS SNS (Simple Notification Service) to send the push notification, so here’s a code snippet from the &lt;code class=&quot;highlighter-rouge&quot;&gt;RegisterController.cs&lt;/code&gt; class.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpPost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ActionResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;PostAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RegisterRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;registerRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;	
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secretKey&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;registerRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Secrets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SecretKeySalt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RegisterWithSNS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AWSAppSettings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SNSApplicationARN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;registerRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Publish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secretKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here’s how I hashed the token with a salt.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;valueBytes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KeyDerivation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Pbkdf2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;  
                        &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  
                        &lt;span class=&quot;n&quot;&gt;salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UTF8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;  
                        &lt;span class=&quot;n&quot;&gt;prf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KeyDerivationPrf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HMACSHA512&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  
                        &lt;span class=&quot;n&quot;&gt;iterationCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  
                        &lt;span class=&quot;n&quot;&gt;numBytesRequested&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;256&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToBase64String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;valueBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;register---app-receive-push-notification&quot;&gt;Register - App: Receive Push Notification&lt;/h2&gt;

&lt;p&gt;The last step in the register process is to accept the SecretKey from APNs in the app, and securely store both the Token and SecretKey in the Keychain for use on subsequent API calls. Here’s a code snippet from the &lt;code class=&quot;highlighter-rouge&quot;&gt;didReceiveRemoteNotification&lt;/code&gt; method in &lt;code class=&quot;highlighter-rouge&quot;&gt;AppDelegate.swift&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;didReceiveRemoteNotification&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;userInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;AnyHashable&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;fetchCompletionHandler&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;completionHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;@escaping&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;UIBackgroundFetchResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;deviceToken&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deviceTokenEncoded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;secretKey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;secretKey&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as?&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;KeychainHelper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deviceToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;KeychainHelper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deviceToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secretKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;KeychainHelper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deviceToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secretKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;subsequent-api-calls&quot;&gt;Subsequent API Calls&lt;/h2&gt;

&lt;p&gt;Once the Register Process has been done, this is how I authenticate the device/app on subsequent API calls.
Here’s a code snippet from the &lt;code class=&quot;highlighter-rouge&quot;&gt;WeatherController.cs&lt;/code&gt; class.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpPost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ActionResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;PostAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;WeatherRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weatherRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;weatherRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Secrets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SecretKeySalt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;weatherRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SecretKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Authentication failed&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Authentication successful&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here’s how &lt;code class=&quot;highlighter-rouge&quot;&gt;Validate&lt;/code&gt; works in combination with the has &lt;code class=&quot;highlighter-rouge&quot;&gt;Create&lt;/code&gt; method above.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
    &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;a-final-note&quot;&gt;A Final Note&lt;/h1&gt;

&lt;p&gt;This article is concerned with respecting the user, their data, and hence their privacy.
Processing and storing user data securely is &lt;strong&gt;not&lt;/strong&gt; easy.&lt;/p&gt;

&lt;p&gt;If you are building a mobile app to provide an experience, start from the user’s perspective and strongly assess &lt;em&gt;what&lt;/em&gt; user data you need to process and store, and &lt;em&gt;how&lt;/em&gt; you should do it.&lt;/p&gt;

&lt;p&gt;If you need to store data for a backup, sync across devices or sharing to other users, Apple (and others) provide increasingly capable Backend as a Service (BaaS) offerings.&lt;/p&gt;</content><author><name>Peter Boni</name></author><category term="Apps" /><category term="APIs" /><category term="Dev" /><category term="Mobile" /><summary type="html">Update August 08, 2020</summary></entry><entry><title type="html">People over resources</title><link href="https://www.peterboni.net/blog/2019/08/12/people-over-resources/" rel="alternate" type="text/html" title="People over resources" /><published>2019-08-12T07:00:00+08:00</published><updated>2019-08-12T07:00:00+08:00</updated><id>https://www.peterboni.net/blog/2019/08/12/people-over-resources</id><content type="html" xml:base="https://www.peterboni.net/blog/2019/08/12/people-over-resources/">&lt;h1 id=&quot;resources&quot;&gt;Resources&lt;/h1&gt;

&lt;p&gt;I’ve had a problem with a few words the IT industry chooses to use for a while now. &lt;a href=&quot;http://www.peterboni.net/blog/2017/12/15/legacy/&quot;&gt;Legacy&lt;/a&gt; is one of them. The other one is &lt;em&gt;resource&lt;/em&gt;. This is &lt;em&gt;that&lt;/em&gt; post. The one I’ve been putting off writing.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.linkedin.com/in/nathan-jones-8821284/&quot;&gt;Nathan Jones&lt;/a&gt; shared my article about the word legacy on LinkedIn at the time with the following comment.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Nice reminder from Peter Boni about the language we use in IT. These ‘heritage’ systems exist, because they have kept the business, in business. I personally look forward to the post on resources.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Sam Newman’s tweet gave me the motivation to write the article, but I’ve really had much more of a problem with the word resource than legacy. At the time I left a somewhat jovial, but mostly sarcastic reply on Nathan’s share of my article. It captures my frustration with peoples continued use of the word resource in any context when referring to people.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“I need to raise an ‘article writer’ resource request and get it through prioritisation first. I may not even be the resource allocated to write it 🤔”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;why-its-important&quot;&gt;Why It’s Important&lt;/h1&gt;

&lt;p&gt;I’m not going to show you definitions of the word resource, or talk about its history. I’m not going to intellectualise it, because my problem with the word resource is emotional.&lt;/p&gt;

&lt;p&gt;When people use the word resource, resources, or resourcing, they are anonymising, de-identifying, or generalising people, and hence each person.&lt;/p&gt;

&lt;p&gt;They are not thinking about a person. They are not thinking about a person’s current skills - soft or technical, or their experience. They are not thinking about a person’s personal or professional development plan.&lt;/p&gt;

&lt;p&gt;They are not thinking about building high performing teams &lt;em&gt;of people&lt;/em&gt;. They are not thinking about the culture of an organisation &lt;em&gt;of people&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Think for a moment how you would feel if you heard a senior leader refer to you as an ‘x resource’, and that ‘we need two more x resources on project y’.&lt;/p&gt;

&lt;p&gt;Given that I’ve heard the term mostly from people with project management experience, maybe there’s something in the Manifesto for Agile Software Development about resources?&lt;/p&gt;

&lt;h1 id=&quot;agile-manifesto&quot;&gt;Agile Manifesto&lt;/h1&gt;

&lt;p&gt;Do you know the first value (of four) of the Agile Manifesto?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Resources and interactions over processes and tools” - &lt;a href=&quot;http://fringe.wikia.com/wiki/Alternate_Universe&quot;&gt;Manifesto for Agile Software Development&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;How stupid does that look and sound? Back in our universe, the first value actually says.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Individuals and interactions over processes and tools” - &lt;a href=&quot;http://agilemanifesto.org&quot;&gt;Manifesto for Agile Software Development&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The Agile Manifesto says &lt;em&gt;individuals&lt;/em&gt; and their &lt;em&gt;interactions&lt;/em&gt;, not &lt;em&gt;resources&lt;/em&gt; and their &lt;em&gt;interactions&lt;/em&gt; - that’s where you should read Sam Newman’s book on Microservices and how they should interact. A service is a resource. A person is not a resource.&lt;/p&gt;

&lt;h1 id=&quot;prime-value&quot;&gt;Prime Value&lt;/h1&gt;

&lt;p&gt;I’m proposing a &lt;em&gt;prime value&lt;/em&gt;. That means it’s “of first importance; main”. It’s really simple.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“&lt;strong&gt;People&lt;/strong&gt; over resources”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And then remember this.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“That is, while there is value in the items on the right, we value the items on the left more.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Always think about people first, before you think about resources. You will change the words you choose to use when referring to people, and influence other people’s thoughts and actions.&lt;/p&gt;</content><author><name>Peter Boni</name></author><summary type="html">Resources</summary></entry><entry><title type="html">Legacy</title><link href="https://www.peterboni.net/blog/2017/12/15/legacy/" rel="alternate" type="text/html" title="Legacy" /><published>2017-12-15T07:00:00+08:00</published><updated>2017-12-15T07:00:00+08:00</updated><id>https://www.peterboni.net/blog/2017/12/15/legacy</id><content type="html" xml:base="https://www.peterboni.net/blog/2017/12/15/legacy/">&lt;p&gt;Sam Newman started it again. Not the &lt;a href=&quot;https://en.wikipedia.org/wiki/Sam_Newman&quot;&gt;controversial one&lt;/a&gt;. The one who wrote the book on Microservices, &lt;a href=&quot;https://www.amazon.com.au/Building-Microservices-Designing-Fine-Grained-Systems-ebook/dp/B00T3N7XB4&quot;&gt;literally&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“I think I first heard the term ‘heritage’ from @peterboni, but I could be totally wrong…”, Sam Newman - &lt;a href=&quot;https://twitter.com/samnewman/status/929737855840202752&quot;&gt;Tweet&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I’ve had a problem with a few words the IT industry chooses to use for a while now. &lt;em&gt;Legacy&lt;/em&gt; is one of them. The other one is &lt;em&gt;resource&lt;/em&gt;, but that’s a post for another time, after a quick tweet.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“My other quest is to replace ‘resource’ with ‘people’ in our vocabulary. Resource is an inanimate not special object you can create and destroy. Do not like it used in relation to tech people.”, Peter Boni - &lt;a href=&quot;https://twitter.com/peterboni/status/941448649019502593&quot;&gt;Tweet&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ok, back to this post. People in the IT industry often refer to &lt;em&gt;older&lt;/em&gt; business systems as ‘legacy’, usually in the following situations:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;It’s become diffucult or expensive to find people who have the skills for, or that even want to work on it, or it’s inherited by new people.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It’s technology architecture or components are no longer fit for purpose.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Of course, it’s never because the new technology is &lt;a href=&quot;https://youtu.be/93lrosBEW-Q&quot;&gt;Shiny&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Given how fast the IT industry is changing, in the above situations, legacy is often said with a certain mindset, and a level of disgust, or disdain. It carries a certain stigma, despite the fact that the business was probably built upon, and is now heavily reliant on the legacy business systems. It’s adding &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I started using a new word a while ago to refer to older business systems. Like Sam Newman, I’m not sure where I heard or read it, but it stuck in my mind. It matters because words have meaning and power. I didn’t want to refer to business systems that I helped build over many years with disgust or disdain, or more importantly for other people to hear that in what I was saying.&lt;/p&gt;

&lt;p&gt;The word I started using is &lt;em&gt;heritage&lt;/em&gt;. To me, it implies that an older business system is &lt;em&gt;valued&lt;/em&gt; and that it should be cared for by being improved, incrementally over time, while continuing to add value.&lt;/p&gt;

&lt;p&gt;Sure, there will come a time when it’s not appropriate or even feasible to continue to do this, and then it’s important to understand and agree not only the reasons for replacing it but the investment required to do so.&lt;/p&gt;</content><author><name>Peter Boni</name></author><category term="Work" /><summary type="html">Sam Newman started it again. Not the controversial one. The one who wrote the book on Microservices, literally.</summary></entry><entry><title type="html">Flow</title><link href="https://www.peterboni.net/blog/2016/02/06/flow/" rel="alternate" type="text/html" title="Flow" /><published>2016-02-06T07:00:00+08:00</published><updated>2016-02-06T07:00:00+08:00</updated><id>https://www.peterboni.net/blog/2016/02/06/flow</id><content type="html" xml:base="https://www.peterboni.net/blog/2016/02/06/flow/">&lt;h1 id=&quot;theory&quot;&gt;Theory&lt;/h1&gt;

&lt;p&gt;I’ve just started one of my 2016 challenges, which is to read one &lt;em&gt;interesting&lt;/em&gt; book a month. An achievable goal for a slow reader with a busy life. I like to absorb, think about, and, more importantly, &lt;em&gt;enjoy&lt;/em&gt; what I’m reading.&lt;/p&gt;

&lt;p&gt;My book for February (January was my holiday month) was originally published in 1990. &lt;strong&gt;Flow: The Psychology of Happiness&lt;/strong&gt; by Mihaly Csikszentmihalyi (good luck pronouncing that) is “The Classic Work on How to Achieve Happiness”.&lt;/p&gt;

&lt;p&gt;Chapter 2 “The Anatomy of Consciousness” talks about how we are at a time in history where the ability to control oneself is not held in high esteem. This is unlike previous periods in history when certain cultures did not accept people as members of the community unless they could master their thoughts and feelings. The chapter describes with great insight what consciousness is, and how it works.&lt;/p&gt;

&lt;h1 id=&quot;practice&quot;&gt;Practice&lt;/h1&gt;

&lt;p&gt;I deliberately chose my first book to complement another 2016 challenge - learn how to meditate. I’ve been using a simple app called “buddhify”, which you can think of as “mindfulness for the digital generation”. With the app on my iPhone, I play short (5 to 10 minutes) guided targeted meditations in the morning when traveling to work, during the day, and at night before going to sleep.&lt;/p&gt;

&lt;p&gt;The app has a beautiful user interface for selecting which meditation you would like to play and even subtly suggests which type you should use based on the time of the day.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-light-border img-center&quot; src=&quot;/img/2016-02-06-flow/Play.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are also stats, but I haven’t felt the need to look at them during the week for motivation. I do think it’s interesting reflecting that consistently doing short meditations each day really adds up by the end of the week. This week I spent 1.4 hours meditating. I can feel the effect of a short meditation on my mind and body, so it will be interesting to see the cumulative long-term impact.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-light-border img-center&quot; src=&quot;/img/2016-02-06-flow/Stats.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Check it out - &lt;a href=&quot;http://www.buddhify.com&quot;&gt;buddhify.com&lt;/a&gt;.&lt;/p&gt;</content><author><name>Peter Boni</name></author><category term="Life" /><summary type="html">Theory</summary></entry><entry><title type="html">2 Years of Running Notes</title><link href="https://www.peterboni.net/blog/2015/01/10/2-years-of-running-notes/" rel="alternate" type="text/html" title="2 Years of Running Notes" /><published>2015-01-10T07:00:00+08:00</published><updated>2015-01-10T07:00:00+08:00</updated><id>https://www.peterboni.net/blog/2015/01/10/2-years-of-running-notes</id><content type="html" xml:base="https://www.peterboni.net/blog/2015/01/10/2-years-of-running-notes/">&lt;p&gt;“How did it go, Peter?” is the placeholder that greets me in the Notes section when completing a run using RunKeeper. It’s unobtrusive, yet alluring. If you have not noticed it yet, it looks like this. It’s sandwiched between your run statistics and the obtrusive social media &lt;em&gt;swagger mode&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-light-border img-center&quot; src=&quot;/img/2015-01-10-2-years-of-running-notes/notes.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When I started running on January 2, 2013 (a new years resolution started one day late), I thought “I’m going to write something in there”. Here is what I wrote.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Breathless. Running = hard!!!&lt;/p&gt;

  &lt;p&gt;&lt;cite&gt;1 Jan 2013, 2.55 km, 6:42 min/km&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This was after an embarrassing (only in hindsight) run. I didn’t even run the full distance.&lt;/p&gt;

&lt;p&gt;I’ve now been running consistently for 2 years, and in that time decided to write &lt;em&gt;something&lt;/em&gt; into the alluring “How did it go, Peter?” about 70% of the time. Here are the major themes I’ve categorised the running notes into.&lt;/p&gt;

&lt;h2 id=&quot;food&quot;&gt;Food&lt;/h2&gt;

&lt;p&gt;Obviously I felt hungry enough during this run to justify the use of the word juicy twice.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;People cooking juicy juicy BBQ steak &amp;amp; sausages at night when I go running should be shot.&lt;/p&gt;

  &lt;p&gt;&lt;cite&gt;18 Jan 2013, 5.22 km, 6:40 min/km&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Sometimes I had the wrong type of food before a run.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Bleh. Cake NOT like run!&lt;/p&gt;

  &lt;p&gt;&lt;cite&gt;22 Jan 2013, 5.27 km, 7:11 min/km&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Or drink.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Learn to love the pain (with 2 beers)&lt;/p&gt;

  &lt;p&gt;&lt;cite&gt;20 Dec 2013, 2.84 km, 4:39 min/km&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Of course sometimes I didn’t have enough.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Insufficient Input&lt;/p&gt;

  &lt;p&gt;&lt;cite&gt;4 Apr 2014, 5.08 km, 5:24 min/km&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;go-through-the-motions&quot;&gt;Go through the motions&lt;/h2&gt;

&lt;p&gt;Sometimes I felt like an object.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Object-&amp;gt;Eat,Sleep,Work,Repeat&lt;/p&gt;

  &lt;p&gt;&lt;cite&gt;8 Apr 2014, 4.16 km, 5:13 min/km&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Or was trying to outrun the residue of the week.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Shit run for a shit week.&lt;/p&gt;

  &lt;p&gt;&lt;cite&gt;14 Mar 2014, 4.32 km, 6:03 min/km&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Or was on autopilot.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Can’t be fu..ahh, “Recovery”. Yeah. That’s it. Recovery.&lt;/p&gt;

  &lt;p&gt;&lt;cite&gt;5 Jun 2014, 5.11 km, 6:00 min/km&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;the-hill&quot;&gt;The Hill&lt;/h2&gt;

&lt;p&gt;Let me introduce you to my nemesis. The Hill. It is not just &lt;em&gt;a hill&lt;/em&gt;. It is a &lt;em&gt;foreboding presence&lt;/em&gt;. Just looking at a photo of it fills me with dread.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/img/2015-01-10-2-years-of-running-notes/the-hill.jpg&quot;&gt;
&lt;img class=&quot;img-light-border img-center&quot; src=&quot;/img/2015-01-10-2-years-of-running-notes/the-hill-small.jpg&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When I try to ignore it, it calls to me.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;From its shadow I feel it’s pull. Come. Climb me. I am. The Hill.&lt;/p&gt;

  &lt;p&gt;&lt;cite&gt;5 Mar 2014, 3.14 km, 5:12 min/km&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And when I finally give in, or find myself attempting to run up it and not knowing how I got there, it asserts itself.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The Hill Angry!&lt;/p&gt;

  &lt;p&gt;&lt;cite&gt;7 Mar 2014, 6.75 km, 5:52 min/km&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And then sometimes, just sometimes, I put the wrong things right.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The one that I punish The Hill.&lt;/p&gt;

  &lt;p&gt;&lt;cite&gt;22 Apr 2014, 4.13 km, 5:17 min/km&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There is also a special section of The Hill which is called &lt;em&gt;The Paul&lt;/em&gt;, when run in reverse, as fast as you can.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The Paul&lt;/p&gt;

  &lt;p&gt;&lt;cite&gt;16 Jun 2014, 0.71 km, 3:28 min/km&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;feeling-good&quot;&gt;Feeling Good&lt;/h2&gt;

&lt;p&gt;The reason I kept running was because of the &lt;em&gt;experience&lt;/em&gt;. I loved it, and it’s reflected in the majority of my running notes.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;From Friday to Sunday I Make My Girls Go Wild&lt;/p&gt;

  &lt;p&gt;&lt;cite&gt;12 Jul 2013, 4.01 km, 5:30 min/km&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;I won’t even make it to the shore without your light…&lt;/p&gt;

  &lt;p&gt;&lt;cite&gt;20 Oct 2013, 7.03 km, 5:28 min/km&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Couldn’t change the magnetism at this rate I’m traveling&lt;/p&gt;

  &lt;p&gt;&lt;cite&gt;02 Dec 2013, 3.89 km, 5:03 min/km&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&amp;lt;3 “The Hill” - This is My Clarity&lt;/p&gt;

  &lt;p&gt;&lt;cite&gt;06 Jan 2014, 7.02 km, 5:58 min/km&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Chilly Bright not Stormy Night, but still … Paradise&lt;/p&gt;

  &lt;p&gt;&lt;cite&gt;14 Jun 2014, 3.09 km, 4:58 min/km&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The other 30% of the time I didn’t write a running note. Sometimes you just need to run. Try putting your feelings and thoughts into a running note after your next run.&lt;/p&gt;</content><author><name>Peter Boni</name></author><category term="Running" /><summary type="html">“How did it go, Peter?” is the placeholder that greets me in the Notes section when completing a run using RunKeeper. It’s unobtrusive, yet alluring. If you have not noticed it yet, it looks like this. It’s sandwiched between your run statistics and the obtrusive social media swagger mode.</summary></entry><entry><title type="html">Consistency</title><link href="https://www.peterboni.net/blog/2014/12/20/consistency/" rel="alternate" type="text/html" title="Consistency" /><published>2014-12-20T07:00:00+08:00</published><updated>2014-12-20T07:00:00+08:00</updated><id>https://www.peterboni.net/blog/2014/12/20/consistency</id><content type="html" xml:base="https://www.peterboni.net/blog/2014/12/20/consistency/">&lt;p&gt;In &lt;a href=&quot;/blog/2014/01/01/running-numbers/&quot;&gt;January&lt;/a&gt; I paid RunKeeper to use the data I gave them the previous year, and give me insight. The numbers and charts were disappointing. This wasn’t insight I thought to myself. I wrote that what mattered was the experience. One year later and RunKeeper still charge you for insight.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-center&quot; src=&quot;/img/2014-12-20-consistency/rk-insights1.png&quot; /&gt;
&lt;img class=&quot;img-center&quot; src=&quot;/img/2014-12-20-consistency/rk-insights2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I discovered that RunKeeper enables you to export your data. ‘Get your export on’ as RunKeeper says. I downloaded my activity data as &lt;a href=&quot;http://en.wikipedia.org/wiki/Comma-separated_values&quot;&gt;CSV&lt;/a&gt;, and attempted to analyse it.&lt;/p&gt;

&lt;p&gt;What do you do with lots of data? Add up the numbers of course. I wanted to compare the last 2 years. The numbers were again disappointing. They didn’t tell me anything interesting that I didn’t already know. More workouts meant more duration and calories burned. Less cycling meant less distance and climb.&lt;/p&gt;

&lt;p&gt;It was time to visualise the data for 2014 with some charts. Maybe charts would give me &lt;em&gt;insight&lt;/em&gt;. First I charted workout duration, with a linear trend line.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-center&quot; src=&quot;/img/2014-12-20-consistency/workouts-duration.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The trend line showed me that my workout time had increased during the year. Combined with the data points a picture of &lt;em&gt;consistency&lt;/em&gt; over the year emerged. I had a sudden realisation. I knew this already!&lt;/p&gt;

&lt;p&gt;The RunKeeper app has a ‘workouts per week’ chart on the ‘Me’ tab. It’s a simple and effective visual of how many workouts you do per week, for the last 10 weeks. I realised that I had been using it during the year to motivate myself. I had been aiming for at least 3 workouts per week. If I fell behind one week, I would workout more the next.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-center&quot; src=&quot;/img/2014-12-20-consistency/rk-workouts-weekly.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next I charted workouts per week, with a monthly moving average trend line.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-center&quot; src=&quot;/img/2014-12-20-consistency/workouts-weekly.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This chart showed me a picture of where my consistency changed. In February I went on a work trip to New Zealand and San Francisco, and in April I had a few weeks holiday. Of course the data doesn’t tell the full story. I did a lot of walking in New Zealand and San Francisco which I didn’t record in RunKeeper.&lt;/p&gt;

&lt;p&gt;The wearable devices wave is coming. We will be capturing more data about ourselves than ever before. This will create many possibilities, and raise many more questions. We need to use these devices to enhance our &lt;em&gt;experience&lt;/em&gt;, and drive our &lt;em&gt;consistency&lt;/em&gt;. And remember you don’t need to pay for &lt;em&gt;insight&lt;/em&gt;. Just do it.&lt;/p&gt;</content><author><name>Peter Boni</name></author><category term="Running" /><summary type="html">In January I paid RunKeeper to use the data I gave them the previous year, and give me insight. The numbers and charts were disappointing. This wasn’t insight I thought to myself. I wrote that what mattered was the experience. One year later and RunKeeper still charge you for insight.</summary></entry><entry><title type="html">City to Surf</title><link href="https://www.peterboni.net/blog/2014/09/08/city-to-surf/" rel="alternate" type="text/html" title="City to Surf" /><published>2014-09-08T07:00:00+08:00</published><updated>2014-09-08T07:00:00+08:00</updated><id>https://www.peterboni.net/blog/2014/09/08/city-to-surf</id><content type="html" xml:base="https://www.peterboni.net/blog/2014/09/08/city-to-surf/">&lt;p&gt;This is a challenge to my future 2015 self, for the City to Surf 12km run. Beat this!&lt;/p&gt;

&lt;p&gt;My 2013 Self&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-center&quot; src=&quot;/img/2014-09-08-city-to-surf/2013.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My 2014 Self&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-center&quot; src=&quot;/img/2014-09-08-city-to-surf/2014.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Average pace: 30 seconds per km faster next year!&lt;/p&gt;</content><author><name>Peter Boni</name></author><category term="Life" /><category term="Running" /><summary type="html">This is a challenge to my future 2015 self, for the City to Surf 12km run. Beat this!</summary></entry><entry><title type="html">Running</title><link href="https://www.peterboni.net/blog/2014/06/27/running/" rel="alternate" type="text/html" title="Running" /><published>2014-06-27T07:00:00+08:00</published><updated>2014-06-27T07:00:00+08:00</updated><id>https://www.peterboni.net/blog/2014/06/27/running</id><content type="html" xml:base="https://www.peterboni.net/blog/2014/06/27/running/">&lt;p&gt;Just passed the Christadelphian Meeting Hall on my nightly run.&lt;/p&gt;

&lt;p&gt;JESUS WILL BE KING ON EARTH.&lt;/p&gt;

&lt;p&gt;I glanced left and saw what appeared to be a dwarf from The Lord of the Rings … running. Full length braided hair to his legs. Full beard. Black t-shirt and jeans. Huge biceps. All that was missing was a battle axe and shield.&lt;/p&gt;

&lt;p&gt;I swear I haven’t been drinking.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-center&quot; src=&quot;/img/2014-06-27-running/photo.jpg&quot; /&gt;&lt;/p&gt;</content><author><name>Peter Boni</name></author><category term="Running" /><category term="Story" /><summary type="html">Just passed the Christadelphian Meeting Hall on my nightly run.</summary></entry><entry><title type="html">Circular</title><link href="https://www.peterboni.net/blog/2014/05/19/circular/" rel="alternate" type="text/html" title="Circular" /><published>2014-05-19T07:00:00+08:00</published><updated>2014-05-19T07:00:00+08:00</updated><id>https://www.peterboni.net/blog/2014/05/19/circular</id><content type="html" xml:base="https://www.peterboni.net/blog/2014/05/19/circular/">&lt;p&gt;As his body left the bus, and his foot struck the pavement, time slowed. His thoughts went immediately to the unknown man and he dreaded the unintelligible call “G.. y.. b.. i.. h…”, like a gong mechanically sounding the impending end of the world. The unknown man always appeared the same; raggedy unwashed hair, unshaven, old dirty clothing. His thoughts moved away from the unknown man, and he headed for the gate.&lt;/p&gt;

&lt;p&gt;He walked along the path, early morning sunlight shining down through the criss-crossed metal gate, hitting the left hand side of his face. His eyes closed, seemingly by themselves to shield against the bright light. He contemplated the warmth of the sun on his face.&lt;/p&gt;

&lt;p&gt;Reluctantly he willed his eyes to slowly open. They squinted and then closed again. Black bars rolled over his closed eyelids as he walked, in a hypnotic rhythm, the effect of the sunlight being blocked by the metal that formed the gate squares. He found it harder to will his eyes open as he walked.&lt;/p&gt;

&lt;p&gt;When his eyes closed he could hear and experience parts of the world that were before drowned out by his visual sense. He heard the sounds of the people around him. Walking. Stomping. Stopping. Starting. Conversing. The birds. Cars. Buses. The cacophony was strangely familiar. He felt himself being pulled past the unknown man, as time began to slowly speed back up.&lt;/p&gt;

&lt;p&gt;“G.. y.. b.. i.. h…” the unknown man intoned. He couldn’t make out what the man was saying, but the way the man spoke synced with his walking, the sunlight and black bars, the sounds. There was rhythm. Everything was moving together. It was coming again, he could hear it before the man began, “G.. y.. b.. i.. h…”.&lt;/p&gt;

&lt;p&gt;And then suddenly it was all gone. As his body left the bus, and his foot struck the pavement, time slowed. He had the feeling that he had been here before.&lt;/p&gt;</content><author><name>Peter Boni</name></author><category term="Story" /><summary type="html">As his body left the bus, and his foot struck the pavement, time slowed. His thoughts went immediately to the unknown man and he dreaded the unintelligible call “G.. y.. b.. i.. h…”, like a gong mechanically sounding the impending end of the world. The unknown man always appeared the same; raggedy unwashed hair, unshaven, old dirty clothing. His thoughts moved away from the unknown man, and he headed for the gate.</summary></entry><entry><title type="html">PhotoArchive 1.3</title><link href="https://www.peterboni.net/blog/2014/04/26/photoarchive-1-dot-3/" rel="alternate" type="text/html" title="PhotoArchive 1.3" /><published>2014-04-26T07:00:00+08:00</published><updated>2014-04-26T07:00:00+08:00</updated><id>https://www.peterboni.net/blog/2014/04/26/photoarchive-1-dot-3</id><content type="html" xml:base="https://www.peterboni.net/blog/2014/04/26/photoarchive-1-dot-3/">&lt;p&gt;PhotoArchive version 1.3 is now available. With version 1.3 you can now easily archive to your home storage &lt;em&gt;and&lt;/em&gt; your cloud (Google Drive) storage.&lt;/p&gt;

&lt;p&gt;Google &lt;a href=&quot;http://googleblog.blogspot.com.au/2014/03/save-more-with-google-drive.html&quot;&gt;recently lowered&lt;/a&gt; the price of their monthly storage plans making it extremely cheap to have an active (not cold like Amazon S3 Glacier Storage) offsite backup of your irreplaceable memories, your photos &amp;amp; videos.&lt;/p&gt;

&lt;div class=&quot;embed-responsive embed-responsive-16by9&quot;&gt;
  &lt;iframe class=&quot;embed-responsive-item&quot; src=&quot;https://www.youtube.com/embed/EzUwVVtSrxs&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;</content><author><name>Peter Boni</name></author><category term="Apps" /><category term="Mobile" /><summary type="html">PhotoArchive version 1.3 is now available. With version 1.3 you can now easily archive to your home storage and your cloud (Google Drive) storage.</summary></entry></feed>